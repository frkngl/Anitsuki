@model AnitsukiTV.Models.TBLUSER

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Profil Ayarları - Anitsuki</title>
    <meta name="language" content="Turkish" />
    <meta name="geo.placename" content="Turkey" />
    <meta name="location" content="Türkiye, TR, Turkey" />
    <meta name="robots" content="noindex, nofollow, noarchive" />
    <meta name="apple-mobile-web-app-title" content="Anitsuki">
    <meta name="theme-color" content="#000000" />
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">

    <meta http-equiv="x-dns-prefetch-control" content="on">
    <link rel="dns-prefetch" href="//cdnjs.cloudflare.com">
    <link rel="dns-prefetch" href="//cdn.jsdelivr.net">

    <meta property="og:title" content="Profil Ayarları - Anitsuki" />
    <meta property="og:image" content="https://www.anitsuki.com/WEBIMG/aylogo.png">
    <meta property="og:type" content="website" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
          integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <link href="~/Content/toastr.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/User33.css" />
    <link rel="shortcut icon" href="~/WEBIMG/aylogotitle.png" type="image/png" />
    <link rel="apple-touch-icon" href="~/WEBIMG/aylogotitle.png" type="image/png">
</head>
<body>

    <div class="loader">

    </div>
    @if (ViewBag.IsFeatureActive)
    {
        <div id="snow-container"></div>
    }

    <header>
        <div class="container-xl">
            <div class="row">
                <div class="logo col-2">
                    <a href="@Url.RouteUrl("Anasayfa")"><img src="~/WEBIMG/logo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"><img class="logomobile" src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"></a>
                </div>

                <input style="display: none;" type="checkbox" id="check">
                <label for="check" class="hamburger-btn col-1">
                    <span></span>
                </label>

                <nav class="col-8">
                    <ul>
                        <li><a href="@Url.RouteUrl("Anasayfa")" class="active"><i class="fa-solid fa-house"></i> Anasayfa</a></li>
                        <li><a href="@Url.RouteUrl("Animeler")"><i class="fa-solid fa-list"></i> Animeler</a></li>
                        <li><a href="@Url.RouteUrl("Bağış")"><i class="bi bi-cash-stack"></i> Bağış</a></li>
                        <li><a href="@Url.RouteUrl("Watch Together")"><i class="bi bi-tv"></i> WT Yakında</a></li>
                    </ul>
                </nav>
                <div class="box col-2">
                    <div class="search">
                        <a href="@Url.RouteUrl("Animeler")"><i class="bi bi-search"></i></a>
                    </div>
                    <div class="user">
                        <a href="/signout"><i class="bi bi-box-arrow-right"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="content9">
        <div class="text">
            <div class="box">
                <i class="bi bi-person" style="font-size: 1.1rem;"></i> @User.Identity.Name
            </div>
            <div class="box">
                <a href="@Url.RouteUrl("Profil", new { userName = User.Identity.Name.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".", "").Replace(",", "") })"> <i class="bi bi-arrow-left"></i> Hesaba Git</a>
            </div>
        </div>
        <div style="display:flex; justify-content:center; align-items:center; flex-direction:column;" class="userdetail">
            @using (Html.BeginForm("ProfileSetting", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <form class="form-group">
                    <div style="display:none;">
                        @Html.LabelFor(x => x.ID, new { @readonly = "readonly" })
                        <br />
                        @Html.TextBoxFor(x => x.ID, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div style="margin-bottom: 30px; display: flex; justify-content: center; align-items: center; flex-direction: column;">
                        @if (Model.PICTURE == null)
                        {
                            <img class="resim" style="margin-bottom:20px;  object-fit: cover; border: 2px solid #FF7F00; width:250px; height:250px;" src="~/USERIMG/stockuser.png" />
                        }
                        else
                        {
                            <img class="resim" style="margin-bottom:20px;  object-fit: cover; border: 2px solid #FF7F00; width:250px; height:250px;" src="~/USERIMG/@Model.PICTURE" />
                            @Html.HiddenFor(x => x.PICTURE)

                        }
                        <input style="background-color: transparent; border: 2px solid #FF7F00; color: #ffffff;" class="form-control" id="resim" type="file" accept=".jpg, .jpeg, .png, .gif" onchange="$('.resim')[0].src = window.URL.createObjectURL(this.files[0])" name="UserImage" />
                    </div>

                    <div style="margin-bottom: 30px; display: flex; justify-content: center; flex-direction: column;">
                        @Html.Label("E-Mail", new { @required = "required", @style = "color:white; font-size:1rem; font-weight:500;" })
                        @Html.TextBoxFor(x => x.MAIL, new { @style = "width:350px; height:40px; border-radius:10px; border:2px solid #FF7F00; background-color:transparent; color:white; outline:none; padding:5px;" })
                    </div>

                    <div style="margin-bottom: 30px; display: flex; justify-content: center; flex-direction: column;">
                        @Html.Label("Şifre", new { @required = "required", @style = "color:white; font-size:1rem; font-weight:500;" })
                        <div style="position: relative;">
                            @Html.TextBoxFor(x => x.PASSWORD, new { @style = "width:350px; height:40px; border-radius:10px; border:2px solid #FF7F00; background-color:transparent; color:white; outline:none; padding:5px;", @id = "password", @type = "password" })
                            <span id="togglePassword" style="position: absolute; right: 10px; top: 50%; transform: translateY(-45%); cursor: pointer; color: white;">
                                <i style="font-size:1.1rem;" class="bi bi-eye-fill"></i>
                            </span>
                        </div>
                    </div>

                    <div style="margin-bottom: 30px; display: flex; justify-content: center; flex-direction: column;">
                        <div style="display:flex; justify-content:space-between;">
                            @Html.Label("Şifre Tekrarı", new { @required = "required", @style = "color:white; font-size:1rem; font-weight:500;" })
                            @Html.ValidationMessageFor(x => x.CONFIRMPASS, "", new { @style = "color:red;" })
                        </div>
                        <div style="position: relative;">
                            @Html.TextBoxFor(x => x.CONFIRMPASS, new { @style = "width:350px;height:40px;border-radius:10px;border:2px solid #FF7F00;background-color:transparent;color:white;outline:none;padding:5px;", @id = "confirmPassword", @type = "password", dir = "ltr" })
                            <span id="toggleConfirmPassword" style="position: absolute; right: 10px; top: 50%; transform:translateY(-45%); cursor: pointer; color: white;">
                                <i style="font-size:1.1rem;" class="bi bi-eye-fill"></i>
                            </span>
                        </div>
                    </div>

                    <div style="margin-bottom: 30px; display: flex; justify-content: center; flex-direction: column;">
                        @Html.Label("Hakkımda", new { @required = "required", @style = "color:white; font-size:1rem; font-weight:500;" })
                        @Html.TextAreaFor(x => x.ABOUT, 15, 1, new { @style = " border-radius:10px; border:2px solid #FF7F00; background-color:transparent; color:white; outline:none; padding:5px;" })
                    </div>

                    <div style="display:flex; justify-content:center;">
                        <button style="color: #FF7F00; border: 2px solid #FF7F00; padding:5px 10px; border-radius:10px; background-color:#000000;outline:none;" id="submitBtn">Kaydet</button>
                    </div>
                </form>
            }
        </div>
    </div>
    <footer>
        <div class="footerimg">
        </div>
        <div class="detail">
            <div class="page">
                <div class="title">
                    Sayfalar
                </div>
                <ul>
                    <li><a href="@Url.RouteUrl("Hakkımızda")">Hakkımızda</a></li>
                    <li><a href="@Url.RouteUrl("Gizlilik Politikası")">Gizlilik Politikası</a></li>
                </ul>
            </div>
            <div class="social">
                <div class="title">
                    Sosyal Medyalar
                </div>
                <ul>
                    <li><a target="_blank" href="https://www.youtube.com/channel/UC3AfwO_XmAvYEtw6FWZXZcw"><i class="fa-brands fa-youtube fa-l"></i> Youtube</a></li>
                    @*<li><a href="#"><i class="fa-brands fa-x-twitter fa-l"></i> Twitter-X</a></li>*@
                    <li><a target="_blank" href="https://www.instagram.com/anitsukitv/"><i class="fa-brands fa-instagram fa-l"></i> Instagram</a></li>
                    <li><a target="_blank" href="https://discord.gg/emkmqardFFk"><i class="bi bi-discord"></i> Discord</a></li>
                </ul>
            </div>
            <div class="contact">
                <div class="title">
                    İletişim
                </div>
                <ul>
                    <li>anitsuki.destek@gmail.com</li>
                </ul>
            </div>
        </div>
        <div class="copyright ">
            <img src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki">
            <div class="text">
                Copyright © Anitsuki @DateTime.Now.Year. Tüm hakları saklıdır.
            </div>
        </div>
    </footer>
</body>
</html>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
<script>
    document.querySelectorAll('nav a').forEach(link => {
        link.classList.remove('active');

        if (link.href === window.location.href) {
            link.classList.add('active');
        }
    });
    window.addEventListener("load", () => {
        const loader = document.querySelector(".loader");

        loader.classList.add("loader-hidden");
    })
    document.addEventListener('keydown', function (event) {
        if (event.code === 'Space' && event.target.tagName !== 'TEXTAREA' && event.target.tagName !== 'INPUT') {
            event.preventDefault();
            event.stopPropagation();
        }
    });
    $(document).ready(function () {
        $('#password, #confirmPassword').on('keyup', function () {
            if ($('#password').val().trim() === '' || $('#confirmPassword').val().trim() === '') {
                $('#submitBtn').prop('disabled', true);
            } else {
                $('#submitBtn').prop('disabled', false);
            }
        });
    });
    $('#resim').on('change', function () {
        var file = this.files[0];
        var fileSize = file.size;
        if (fileSize > 15 * 1024 * 1024) {
            alert("Lütfen 15 MB'den küçük bir dosya seçiniz!!!");
            this.value = '';
        } else {
            $('.resim')[0].src = window.URL.createObjectURL(file);
        }
    });
</script>
<script>
    const togglePositionalHeaderStyles = () => {
        if (window.scrollY > 0 && !header.classList.contains("header-change")) {
            header.classList.add("header-change");
        };
        if (window.scrollY === 0 && header.classList.contains("header-change")) {
            header.classList.remove("header-change");
        };
    };

    let timeoutID = null;
    const header = document.querySelector("header");
    togglePositionalHeaderStyles();
    window.addEventListener("scroll", () => {
        togglePositionalHeaderStyles();
        if (timeoutID) clearTimeout(timeoutID);
        timeoutID = setTimeout(() => {
            togglePositionalHeaderStyles();
        }, 50);
    });
</script>
@if (TempData["success"] != null)
{
    <script type="text/javascript">
        toastr["success"]("Başarıyla Güncellenmiştir!", "Güncelleme")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (TempData["error"] != null)
{
    <script type="text/javascript">
        toastr["error"]("Lütfen geçerli bir Mail adresi giriniz! Örnek: abc@ornek.com", "Hatalı Giriş")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (TempData["error2"] != null)
{
    <script type="text/javascript">
        toastr["error"]("Lütfen Mail alanınızı boş bırakmayınız!", "Hatalı Giriş")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (TempData["error3"] != null)
{
    <script type="text/javascript">
        toastr["error"]("Lütfen resim formatında bir dosya seçiniz! Örnek a.jpg, a.jpeg, a.gif !", "Format türü yanlış")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (TempData["error4"] != null)
{
    <script type="text/javascript">
        toastr["error"]("Şifreler aynı değil!", "Şifre uyuşmazlığı")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (TempData["error5"] != null)
{
    <script type="text/javascript">
        toastr["error"]("Lütfen 15 MB'den küçük bir dosya seçiniz!", "Boyut aşımı")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}
@if (TempData["error6"] != null)
{
    <script type="text/javascript">
        toastr["error"]("Mail adresi kullanımda!", "Mail adres hatası")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["error10"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["error10"]", "İşlem Hatası")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (ViewBag.IsFeatureActive)
{
    <script>
        // script.js
        const snowContainer = document.getElementById('snow-container');

        function createSnowflake() {
            const snowflake = document.createElement('div');
            const size = Math.random() * 5 + 2; // Kar tanesi boyutu
            const leftPosition = Math.random() * window.innerWidth; // Rastgele soldan konum
            const animationDuration = Math.random() * 3 + 2; // Rastgele animasyon süresi

            snowflake.classList.add('snowflake');
            snowflake.style.width = `${size}px`;
            snowflake.style.height = `${size}px`;
            snowflake.style.left = `${leftPosition}px`;
            snowflake.style.animationDuration = `${animationDuration}s`;

            snowContainer.appendChild(snowflake);

            // Kar tanesinin düşüşü tamamlandığında sil
            setTimeout(() => {
                snowflake.remove();
            }, animationDuration * 1000);
        }

        // Kar tanelerini sürekli oluştur
        setInterval(createSnowflake, 500); // Her 100 ms'de bir kar tanesi oluştur
    </script>
}

<script>
    document.getElementById('togglePassword').addEventListener('click', function () {
        const passwordField = document.getElementById('password');
        const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordField.setAttribute('type', type);
        this.innerHTML = type === 'password' ? '<i style="font-size:1.1rem;" class="bi bi-eye-fill"></i>' : '<i style="font-size:1.1rem;" class="bi bi-eye-slash-fill"></i>'; 
    });

    document.getElementById('toggleConfirmPassword').addEventListener('click', function () {
        const confirmPasswordField = document.getElementById('confirmPassword');
        const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordField.setAttribute('type', type);
        this.innerHTML = type === 'password' ? '<i style="font-size:1.1rem;" class="bi bi-eye-fill"></i>' : '<i style="font-size:1.1rem;" class="bi bi-eye-slash-fill"></i>'; 
    });
</script>

