@using AnitsukiTV.Models
@model TabeList
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Anitsuki - Watch Together</title>
    <meta name="description" content="Anitsuki Watch Together sayfası yapım aşamasında. Yakında özel içeriklere ve topluluk özelliklerine erişim sağlayabileceksiniz. Bizi takip edin!" />
    <meta name="language" content="Turkish" />
    <meta name="geo.placename" content="Turkey" />
    <meta name="location" content="Türkiye, TR, Turkey" />
    <meta name="robots" content="noindex, nofollow, noarchive" />
    <meta name="apple-mobile-web-app-title" content="Anitsuki">
    <meta name="theme-color" content="#000000" />
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">

    <meta http-equiv="x-dns-prefetch-control" content="on">
    <link rel="dns-prefetch" href="//cdnjs.cloudflare.com">
    <link rel="dns-prefetch" href="//cdn.jsdelivr.net">
    <link rel="dns-prefetch" href="//fonts.googleapis.com">

    <meta property="og:title" content="Anitsuki - Watch Together" />
    <meta property="og:url" content="https://www.anitsuki.com/watch-together" />
    <meta property="og:image" content="https://www.anitsuki.com/WEBIMG/aylogo.png">
    <meta property="og:type" content="website" />
    <meta property="og:description" content="Anitsuki Watch Together sayfası yapım aşamasında. Yakında özel içeriklere ve topluluk özelliklerine erişim sağlayabileceksiniz. Bizi takip edin!" />

    <link rel="stylesheet" href="~/Content/bootstrap.min.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/toastr.min.css" type="text/css" />
    <link rel="stylesheet" href="~/css/watchtogether5.css" type="text/css">
    <link href="https://fonts.googleapis.com/css2?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
          integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="shortcut icon" href="~/WEBIMG/aylogotitle.png" type="image/png" />
    <link rel="apple-touch-icon" href="~/WEBIMG/aylogotitle.png" type="image/png">
    <style>
        header #nabermudur ul {
            max-height: 300px;
            overflow-y: auto;
        }

        .friendadd {
            position: absolute;
            width: 370px;
            height: calc(100vh - 60px);
            background-color: #000000;
            box-shadow: 0px 0px 0px 0px #313131;
            top: 60px;
            right: 0;
            transform: translateX(100%);
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
            transition: all 0.3s ease-in-out;
        }

            .friendadd.active {
                transform: translateX(0%);
                box-shadow: -10px 10px 60px 5px #313131;
            }

            /* Mobil tam ekran stili */
            .friendadd.full-screen {
                position: fixed; /* Sabit konumda olmasını sağlar */
                top: 60px;
                right: 0;
                width: 100%;
                height: calc(100vh - 60px);
                border-radius: 0; /* Kenar yuvarlamalarını kaldır */
                z-index: 1000; /* Diğer öğelerin üstünde görünmesi için */
            }

            .friendadd #friendaddclose {
                position: absolute;
                width: 30px;
                height: 30px;
                left: 10px;
                background-color: #cccc;
                display: none;
            }

                .friendadd #friendaddclose.active {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    left: 10px;
                    background-color: #cccc;
                    display: block;
                }

            .friendadd .searchhh {
                position: relative;
                width: 200px;
                height: 40px;
                margin-left: 50%;
                transform: translateX(-50%);
                margin-top: 25px;
                margin-bottom: 15px;
            }

                .friendadd .searchhh .fa-magnifying-glass {
                    position: absolute;
                    top: 50%;
                    left: 10px;
                    z-index: 9;
                    font-size: 1rem;
                }

                .friendadd .searchhh input {
                    position: absolute;
                    top: 0;
                    left: 0;
                    background-color: #313131;
                    color: #ffffff;
                    border: none;
                    width: 100%;
                    height: 100%;
                    border-radius: 20px;
                    padding: 0px 0px 0px 35px;
                }

            .friendadd #menuFull11 {
                list-style-type: none;
                padding: 0px 10px;
                width: 100%;
                height: calc(100vh - 140px);
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: start;
                overflow-y: auto;
            }

                .friendadd #menuFull11::-webkit-scrollbar {
                    display: none;
                }

                .friendadd #menuFull11 a {
                    color: white;
                    text-decoration: none;
                }

        .user ul li a:hover {
            background-color: #ffffff;
            color: #000000 !important;
        }

        header #nabermudur ul {
            max-height: 300px;
            overflow-y: auto;
        }

        .videoimg {
            position: relative;
        }

        .deadnote {
            position: relative;
            background: rgb(255,127,0);
            background: radial-gradient(circle, rgba(255,127,0,1) 0%, rgba(0,0,0,1) 100%);
            padding-top: 2.5rem;
            padding-bottom: 2.5rem;
        }

            .deadnote .buton {
                transition: all 0.3s;
                background-color: #000000 !important;
                color: orange !important;
                box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
                text-decoration: none;
            }

                .deadnote .buton:hover {
                    background-color: orange !important;
                    color: #000000 !important;
                }
    </style>
</head>
<body>
    <div class="loader">

    </div>
    @if (ViewBag.IsFeatureActive)
    {
        <div id="snow-container"></div>
    }

    <header>
        <div class="container-xl">
            <div class="row">
                <div class="logo col-2">
                    <a href="@Url.RouteUrl("Anasayfa")"><img src="~/WEBIMG/logo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"><img class="logomobile" src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"></a>
                </div>

                <input style="display: none;" type="checkbox" id="check">
                <label for="check" class="hamburger-btn col-1">
                    <span></span>
                </label>

                <nav class="col-8">
                    <ul>
                        <li><a href="@Url.RouteUrl("Anasayfa")" class="active"><i class="fa-solid fa-house"></i> Anasayfa</a></li>
                        <li><a href="@Url.RouteUrl("Animeler")"><i class="fa-solid fa-list"></i> Animeler</a></li>
                        <li><a href="@Url.RouteUrl("Bağış")"><i class="bi bi-cash-stack"></i> Bağış</a></li>
                        <li><a href="@Url.RouteUrl("Watch Together")"><i class="bi bi-tv"></i> WT Yakında</a></li>
                    </ul>
                </nav>
                <div class="box col-2">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div id="nabermudur" style="margin-right:5px;" class="search">
                            <button style="background-color:transparent; border:none; outline:none; color:orange;" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i id="notification-icon" style="font-size:1.5rem;" class="bi bi-bell"></i>
                            </button>
                            <ul id="nabermudurr" style="background-color:#313131;" class="dropdown-menu">
                                @if (Model.Notifications.Any(n => n.ISCLEARED == false))
                                {
                                    foreach (var notification in Model.Notifications)
                                    {
                                        <li style="display: flex; align-items: center; padding: 5px;">
                                            <a style="display: flex; align-items: center; padding: 5px; text-decoration:none;" href="@Url.RouteUrl("Profil", new { userName = notification.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">
                                                @if (notification.PROFILEPICTURE != null)
                                                {
                                                    <img src="~/USERIMG/@notification.PROFILEPICTURE" style=" object-fit:cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                }
                                                else
                                                {
                                                    <img src="~/USERIMG/stockuser.png" style=" object-fit: cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                }
                                                <div style="color: #ffffff;">
                                                    <strong>@notification.USERNAME</strong><br />
                                                    <span style="font-size: 0.9rem;">@notification.MESSAGE</span><br />
                                                    <span style="font-size: 0.8rem; color: #cccccc;">@notification.CREATED.Value.ToString("dd.MM.yyyy")</span>
                                                </div>
                                            </a>
                                        </li>
                                    }
                                    <li>
                                        <button id="clear-notifications" style="margin: 0px; width: 100%; padding: 5px 12px; color: #ffffff; background: none; border: none;">Temizle</button>
                                    </li>
                                }
                                else
                                {
                                    <li style="color:white; text-align:center;">Bildirim Kutusu Boş</li>
                                }
                            </ul>
                        </div>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div style="margin-left:0px;" class="search">
                            <a href="#" id="toggleFriendAdd">
                                <i style="font-size:1.8rem !important;" class="bi bi-person-add"></i>
                            </a>
                        </div>

                    }
                    <div style="margin-right:-10px;" class="search">
                        <a href="@Url.RouteUrl("Animeler")"><i class="bi bi-search"></i></a>
                    </div>
                    <div class="friendadd">
                        <div style="position:relative;" id="followersContent">
                            <button id="friendaddclose" class="btn-close"></button>
                            <div class="searchhh">
                                <i style="color:white;" class="fa-solid fa-magnifying-glass fa-xl"></i>
                                <input type="text" autocomplete="off" name="searchTags11" id="searchTags11" placeholder="Arkadaş Ara..." />
                            </div>
                            <ul id="menuFull11" style="display: none; overflow-y: auto;">
                                @foreach (var user in Model.Users.Where(x => x.STATUS == true))
                                {
                                    <li style="margin:10px 0px;width:100%; display:flex; justify-content:space-between; align-items:center;">
                                        <div>
                                            @{
                                                AnitsukiTVEntities y = new AnitsukiTVEntities();
                                                var Followers = y.TBLFOLLOWERS.Where(f => f.FOLLOWEDID == user.ID).Select(f => f.TBLUSER).ToList();
                                                ViewBag.FollowersCountt = Followers.Count(x => x.STATUS == true);
                                            }
                                            <a style="display:flex;" href="@Url.RouteUrl("Profil", new { userName = user.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">
                                                @if (user.PICTURE != null)
                                                {
                                                    <img style="width:50px; height:50px; object-fit:cover; margin-right:7px; border-radius:50%;" src="~/USERIMG/@user.PICTURE" />
                                                    <div>
                                                        <span style="font-size: 0.9rem;">@user.USERNAME</span><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">Takipçi:@ViewBag.FollowersCountt</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <img style="width: 50px; height: 50px; object-fit: cover; margin-right: 7px; border-radius: 50%;" src="~/USERIMG/stockuser.png" />
                                                    <div>
                                                        <span style="font-size: 0.9rem;">@user.USERNAME</span><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">Takipçi:@ViewBag.FollowersCountt</span>
                                                    </div>
                                                }
                                            </a>
                                        </div>
                                        <div style="color:white;">
                                            <button onclick="followUser  (@user.ID, this)" style="background-color: transparent; border: none; color: #FF7F00;">
                                                @if (ViewBag.FollowedUserIds.Contains(user.ID))
                                                {
                                                    <i style="font-size:2.5rem;" class="bi bi-person-fill-dash"></i> <!-- Takipten çıkma simgesi -->
                                                }
                                                else
                                                {
                                                    <i style="font-size: 2.5rem;" class="bi bi-person-fill-add"></i> <!-- Takip etme simgesi -->
                                                }
                                            </button>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="user">
                        <div style="height:60px; display:flex; align-items:center; margin-left:10px;" class="dropdown">
                            @{ AnitsukiTVEntities db = new AnitsukiTVEntities(); }
                            @if (User.Identity.IsAuthenticated)
                            {
                                var currentUser = db.TBLUSER.FirstOrDefault(u => u.USERNAME == User.Identity.Name);
                                string userNameUrl = User.Identity.Name.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".", "").Replace(",", "");

                                <button style="background-color:transparent; border:none; outline:none; color:orange;" class="dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    @if (currentUser != null && currentUser.PICTURE != null)
                                    {
                                        <img width="40" height="40" style="border-radius:50%; object-fit:cover;" src="~/USERIMG/@currentUser.PICTURE">
                                    }
                                    else
                                    {
                                        <img width="40" height="40" style="border-radius: 50%; object-fit: cover;" src="~/USERIMG/stockuser.png">
                                    }
                                </button>
                                <ul style="background-color:#313131;" class="dropdown-menu">
                                    <li><a style="margin:0px; padding:5px 12px; color:white;" class="dropdown-item" href="@Url.RouteUrl("Profil", new { userName = userNameUrl })"><i style="font-size:1.3rem;" class="bi bi-person"></i> Profil</a></li>
                                    <li><a style="margin:0px; padding: 5px 15px; color: white;" class="dropdown-item" href="/signout"><i style="font-size:1.3rem;" class="bi bi-box-arrow-right"></i> Çıkış Yap</a></li>
                                </ul>
                            }
                            else
                            {
                                <a style="margin-left:-15px !important;" href="@Url.RouteUrl("Giriş")"><i class="bi bi-person"></i></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="error">
        @foreach (var x in Model.Error.Where(x => x.STATUS == true).OrderBy(x => Guid.NewGuid()).Take(1))
        {
            <div class="text">
                <div class="textdetail">
                    <div class="title">
                        Watch Together Yakında...
                    </div>
                    <div class="des">
                        Watch Together sayfası yapımı plan aşamasında ne zaman yaparız belli değil bir bakmışsın aniden karşına çıkabilir burayı beklemek yerine al sana <b>@x.TEXT</b> animesinden bir sahne veriyorum.
                    </div>
                </div>
            </div>
            <div class="videos">
                <video class="video" loop muted playsinline>
                    <source src="~/Videos/@x.VIDEO">
                </video>
                <div class="buttons">
                    <button class="material-symbols-outlined toggle">play_arrow</button>
                    <button class="material-symbols-outlined restart">restart_alt</button>
                    <button class="material-symbols-outlined volume">volume_off</button>
                </div>
            </div>
        }
    </div>
</body>
</html>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<script>
    const audio = document.querySelector('.video');
    const btnToggle = document.querySelector('.toggle');
    const btnRestart = document.querySelector('.restart');
    const btnMuteUnmte = document.querySelector('.volume');


    btnToggle.addEventListener("click", () => {
        if (audio.paused) {
            audio.play();
            btnToggle.textContent = "pause";
        } else {
            audio.pause();
            btnToggle.textContent = "play_arrow";
        }
    });

    btnRestart.addEventListener('click', () => {
        audio.currentTime = 0;
        audio.play();
    });

    btnMuteUnmte.addEventListener('click', () => {
        if (audio.muted) {
            audio.muted = false;
            audio.volume = 0.08;
            btnMuteUnmte.textContent = "volume_up";
        } else {
            audio.muted = true;
            btnMuteUnmte.textContent = "volume_off";
        }
    });
</script>
<script>
    document.querySelectorAll('nav a').forEach(link => {
        link.classList.remove('active');

        if (link.href === window.location.href) {
            link.classList.add('active');
        }
    });
    window.addEventListener("load", () => {
        const loader = document.querySelector(".loader");

        loader.classList.add("loader-hidden");
    })
    document.addEventListener('keydown', function (event) {
        if (event.code === 'Space' && event.target.tagName !== 'TEXTAREA' && event.target.tagName !== 'INPUT') {
            event.preventDefault();
            event.stopPropagation();
        }
    });
</script>
<script>
    const togglePositionalHeaderStyles = () => {
        if (window.scrollY > 0 && !header.classList.contains("header-change")) {
            header.classList.add("header-change");
        };
        if (window.scrollY === 0 && header.classList.contains("header-change")) {
            header.classList.remove("header-change");
        };
    };

    let timeoutID = null;
    const header = document.querySelector("header");
    togglePositionalHeaderStyles();
    window.addEventListener("scroll", () => {
        togglePositionalHeaderStyles();
        if (timeoutID) clearTimeout(timeoutID);
        timeoutID = setTimeout(() => {
            togglePositionalHeaderStyles();
        }, 50);
    });
</script>

@if (ViewBag.IsFeatureActive)
{
    <script>
        // script.js
        const snowContainer = document.getElementById('snow-container');

        function createSnowflake() {
            const snowflake = document.createElement('div');
            const size = Math.random() * 5 + 2; // Kar tanesi boyutu
            const leftPosition = Math.random() * window.innerWidth; // Rastgele soldan konum
            const animationDuration = Math.random() * 3 + 2; // Rastgele animasyon süresi

            snowflake.classList.add('snowflake');
            snowflake.style.width = `${size}px`;
            snowflake.style.height = `${size}px`;
            snowflake.style.left = `${leftPosition}px`;
            snowflake.style.animationDuration = `${animationDuration}s`;

            snowContainer.appendChild(snowflake);

            // Kar tanesinin düşüşü tamamlandığında sil
            setTimeout(() => {
                snowflake.remove();
            }, animationDuration * 1000);
        }

        // Kar tanelerini sürekli oluştur
        setInterval(createSnowflake, 500); // Her 100 ms'de bir kar tanesi oluştur
    </script>
}

<script>
    // jQuery kullanarak metin eşleşmesini kontrol eden özel bir seçici
    jQuery.expr[':'].contains = function (a, i, m) {
        return jQuery(a).text().toUpperCase().indexOf(m[3].toUpperCase()) >= 0;
    };

    $(document).ready(function () {
        $("#searchTags11").on("input", function () { // 'input' olayını kullanarak gerçek zamanlı filtreleme
            var value = $(this).val(); // Mevcut giriş değerini al

            if (value.length === 0) {
                $("#menuFull11").hide(); // Eğer giriş boşsa kullanıcıları gizle
            } else {
                $("#menuFull11").show(); // Giriş değeri varsa kullanıcı listesini göster
                $("#menuFull11 li").hide(); // İlk olarak tüm kullanıcıları gizle
                $("#menuFull11 li:contains(" + value + ")").show(); // Giriş değerini içeren kullanıcıları göster
            }
        });

        // Sayfa yüklendiğinde kullanıcı listesini gizle
        $("#menuFull11").hide(); // Bu satır, sayfa yüklendiğinde kullanıcı listesinin gizlenmesini sağlar.
    });
</script>

<script>
    function followUser(followedUserId, button) {
        $.ajax({
            type: "POST",
            url: "/User/FollowUser ",
            data: { followedUserId: followedUserId },
            success: function (response) {
                if (response.success) {
                    if (response.isFollowing) {
                        // Takip etme durumu
                        $(button).html('<i style="font-size:2.5rem;" class="bi bi-person-fill-dash"></i>'); // Takipten çıkma simgesi
                        toastr.success('Artık bu kullanıcıyı takip ediyorsunuz.'); // Başarı bildirimi
                    } else {
                        // Takipten çıkma durumu
                        $(button).html('<i style="font-size:2.5rem;" class="bi bi-person-fill-add"></i>'); // Takip etme simgesi
                        toastr.error('Artık bu kullanıcıyı takipten çıkıyorsunuz.'); // Hata bildirimi
                    }
                } else {
                    toastr.error(response.message || 'Kullanıcıyı takip etmeye/çıkarma işleminde bir hata oluştu.'); // Hata bildirimi
                }
            },
            error: function () {
                toastr.error('İsteğinizi işleme alırken bir hata oluştu.'); // Genel hata bildirimi
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        // Eğer yeni bildirim varsa ikon dolu olacak
        var hasNewNotification = @Model.Notifications.Any(n => n.ISCLEARED == false).ToString().ToLower();
        if (hasNewNotification) {
            $('#notification-icon').removeClass('bi-bell').addClass('bi-bell-fill');
        }

        $('#notification-icon').click(function () {
            // İkon tıklandığında dolu ikon boş ikona dönüşecek
            $(this).removeClass('bi-bell-fill').addClass('bi-bell');
        });

        $('#clear-notifications').click(function () {
            $.ajax({
                type: "POST",
                url: "/User/ClearNotifications",
                success: function (data) {
                    if (data.success) {
                        $('#nabermudurr').empty();
                        $('#nabermudurr').append('<li style="color:white; text-align:center;">Bildirim Kutusu Boş</li>');
                        $('#notification-icon').removeClass('bi-bell-fill').addClass('bi-bell'); // İkonu boş yap
                        toastr.success(data.message, "Bildirimler Temizlendi");
                    } else {
                        toastr.error(data.message, "Hata");
                    }
                }
            });
        });
    });
</script>
@if (User.Identity.IsAuthenticated)
{
    <script>
        function isMobile() {
            return /Mobi|Android|iPhone/i.test(navigator.userAgent);
        }

        const toggleButton = document.getElementById('toggleFriendAdd');
        const friendAdd = document.querySelector('.friendadd');
        const toggleButton2 = document.getElementById('friendaddclose');

        // Sayfa yüklendiğinde, eğer mobil cihazsa friendAdd'i tam ekran yap
        window.onload = function () {
            if (isMobile()) {
                friendAdd.classList.add('full-screen'); // Tam ekran sınıfını ekle
                toggleButton2.classList.add('active');
            }
        };

        toggleButton.addEventListener('click', function (event) {
            event.preventDefault(); // Linkin varsayılan davranışını engelle
            friendAdd.classList.toggle('active'); // active sınıfını ekle veya kaldır
        });

        toggleButton2.addEventListener('click', function (event) {
            event.preventDefault(); // Linkin varsayılan davranışını engelle
            friendAdd.classList.toggle('active'); // active sınıfını ekle veya kaldır
        });

        // Sayfanın herhangi bir yerine tıklandığında friendadd'ı kapat
        document.addEventListener('click', function (event) {
            if (!friendAdd.contains(event.target) && !toggleButton.contains(event.target)) {
                friendAdd.classList.remove('active'); // active sınıfını kaldır
            }
        });
    </script>
}
