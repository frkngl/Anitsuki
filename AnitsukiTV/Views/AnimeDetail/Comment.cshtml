@using AnitsukiTV.Models
@model List<TBLANIMECOMMENT>

<style>
    .comments .detail .user .name a {
        color: #ffffff; 
        text-decoration: none; 
        transition: all 0.2s;
    }

        .comments .detail .user .name a:hover {
            color: #FF7F00; 
        }

    .like.active a,
    .unlike.active a {
        color: orange; 
    }

    .like a,
    .unlike a {
        color: white; 
    }
</style>
<div class="title">
    <i class="bi bi-chat"></i> @ViewBag.AnimeCount Yorum
</div>
<div class="comments">
    @{ string isim = "abc";}
    @if (Model.Any())
    {
        foreach (var x in Model.Where(x => x.USTID == null).OrderByDescending(x => x.ID).Take(100))
        {
            <div class="comment1">
                @if (x.TBLUSER.PICTURE != null)
                {
                    <img src="~/USERIMG/@x.TBLUSER.PICTURE" loading="lazy">
                }
                else
                {
                    <img src="~/USERIMG/stockuser.png" loading="lazy"/>
                }
                <div class="detail">
                    <div class="user">
                        <div class="name">
                            @if (User.Identity.IsAuthenticated)
                            {
                                // Giriş yapmış kullanıcı
                                <a href="@Url.RouteUrl("Profil", new { userName = x.TBLUSER.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">@x.TBLUSER.USERNAME</a>
                            }
                            else
                            {
                                // Giriş yapmamış kullanıcı
                                <a href="@Url.RouteUrl("Giriş", new { returnUrl = Request.RawUrl })">@x.TBLUSER.USERNAME</a>
                            }
                        </div>
                        <div class="year">
                            @x.DATE.Value.ToString("dd.MM.yyyy")
                        </div>
                    </div>
                    <div class="text">
                        @x.COMMENT
                    </div>
                    <div class="more">
                        @{ isim = isim + x.ID;}

                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="reply" data-bs-toggle="modal" data-bs-target="#@isim">
                                <i class="bi bi-reply"></i>Cevapla
                            </div>
                            <!-- Modal form here -->
                            <!-- Modal -->
                            <div style="margin-top: 100px;" class="modal fade" id="@isim" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div style="background-color: #000000; box-shadow: 0px 0px 20px #FF7F00" class="modal-content">
                                        <div class="modal-header">
                                            <h1 style="color:#ffffff;" class="modal-title fs-5" id="exampleModalLabel">Cevap Yazıyorsunuz</h1>
                                            <button style="background-color: #ffffff; color:#ffffff;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            @using (Html.BeginForm("ReplyComment", null, new { animeName = ViewBag.animeName, seasonNumber = ViewBag.seasonNumber }, FormMethod.Post))
                                            {
                                                <input hidden type="text" name="animeName" value="@ViewBag.animeName" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                <input hidden type="text" name="USTID" value="@x.ID" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                <input hidden type="text" name="ANIMEID" value="@ViewBag.anime" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                if (x.TBLUSER.PICTURE != null)
                                                {
                                                    <img hidden src="~/USERIMG/@x.TBLUSER.PICTURE" alt="Profil Fotoğrafı" loading="lazy"/>
                                                }
                                                else
                                                {
                                                    <img hidden src="~/USERIMG/stockuser.png" loading="lazy"/>
                                                }
                                                if (x.TBLUSER != null && !string.IsNullOrEmpty(x.TBLUSER.USERNAME))
                                                {
                                                    <span hidden>@x.TBLUSER.USERNAME</span>
                                                    <div style="color:#ffffff;">Cevap yazdığınız kişi</div>
                                                    <input type="text" name="USERID" value="@x.TBLUSER.USERNAME" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                }
                                                else
                                                {
                                                    <input type="text" name="USERID" value="" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                }
                                                <br />
                                                <div style="color:#ffffff;">Yorum</div>
                                                <textarea name="COMMENT" class="form-control" style="border: none; color: #ffffff; background-color: #313131; outline: solid #000000; height: 200px;" required></textarea>
                                                <br />
                                                <div style="width:100%; display:flex; justify-content:center;">
                                                    <button style="background-color: #FF7F00; width:90px; height:40px; border-radius:20px; border:none; font-size:1rem;" type="submit"> Gönder </button>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Giriş")" style="text-decoration: none; color: white;">
                                <i class="bi bi-reply"></i>Cevapla
                            </a>
                        }
                        <div class="likeandunlike">
                            @{
                                AnitsukiTVEntities db = new AnitsukiTVEntities();
                                var userID = db.TBLUSER.Where(u => u.USERNAME == User.Identity.Name).Select(u => u.ID).FirstOrDefault();
                                var likeExist = x.TBLANIMECOMMENTLIKE.Any(y => y.USERID == userID);
                                var liked = x.TBLANIMECOMMENTLIKE.FirstOrDefault(y => y.USERID == userID)?.STATUS;
                            }

                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="like @(liked.HasValue && liked.Value ? "active" : "")" data-comment-id="@x.ID">
                                    <a style="text-decoration: none; cursor: pointer;" onclick="handleLikeOrUnlike(this, @x.ID, @userID, true)">
                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                        <span id="like-count-@x.ID">@x.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == true).Count()</span>
                                    </a>
                                </div>

                                <div class="unlike @(liked.HasValue && !liked.Value ? "active" : "")" data-comment-id="@x.ID">
                                    <a style="text-decoration: none; cursor: pointer;" onclick="handleLikeOrUnlike(this, @x.ID, @userID, false)">
                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                        <span id="unlike-count-@x.ID">@x.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == false).Count()</span>
                                    </a>
                                </div>
                            }
                            else
                            {
                                <div class="like" style="margin-right:5px;" data-comment-id="@x.ID">
                                    <a style="text-decoration:none; color:white;" href="@Url.RouteUrl("Giriş")">
                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                        @x.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == true).Count()
                                    </a>
                                </div>
                                <div class="unlike" data-comment-id="@x.ID">
                                    <a style="text-decoration:none; color:white;" href="@Url.RouteUrl("Giriş")">
                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                        @x.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == false).Count()
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            foreach (var y in Model.Where(z => z.USTID == x.ID))
            {
                <div class="comment2">
                    @if (y.TBLUSER.PICTURE != null)
                    {
                        <img src="~/USERIMG/@y.TBLUSER.PICTURE" loading="lazy">
                    }
                    else
                    {
                        <img src="~/USERIMG/stockuser.png" loading="lazy"/>
                    }
                    <div class="detail">
                        <div class="user">
                            <div class="name">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    // Giriş yapmış kullanıcı
                                    <a href="@Url.RouteUrl("Profil", new { userName = y.TBLUSER.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">@y.TBLUSER.USERNAME</a>
                                }
                                else
                                {
                                    // Giriş yapmamış kullanıcı
                                    <a href="@Url.RouteUrl("Giriş", new { returnUrl = Request.RawUrl })">@y.TBLUSER.USERNAME</a>
                                }
                            </div>
                            <div class="year">
                                @y.DATE.Value.ToString("dd.MM.yyyy")
                            </div>
                        </div>
                        <div class="text">
                            @y.COMMENT
                        </div>
                        <div class="more">
                            @{ isim = isim + y.ID;}

                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="reply" data-bs-toggle="modal" data-bs-target="#@isim">
                                    <i class="bi bi-reply"></i>Cevapla
                                </div>
                                <!-- Modal form here -->
                                <!-- Modal -->
                                <div style="margin-top: 100px;" class="modal fade" id="@isim" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div style="background-color: #000000; box-shadow: 0px 0px 20px #FF7F00" class="modal-content">
                                            <div class="modal-header">
                                                <h1 style="color:#ffffff;" class="modal-title fs-5" id="exampleModalLabel">Cevap Yazıyorsunuz</h1>
                                                <button style="background-color: #ffffff; color:#ffffff;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                @using (Html.BeginForm("ReplyComment", null, new { animeName = ViewBag.animeName, seasonNumber = ViewBag.seasonNumber }, FormMethod.Post))
                                                {
                                                    <input hidden type="text" name="animeName" value="@ViewBag.animeName" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                    <input hidden type="text" name="USTID" value="@x.ID" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                    <input hidden type="text" name="ANIMEID" value="@ViewBag.anime" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                    if (y.TBLUSER.PICTURE != null)
                                                    {
                                                        <img hidden src="~/USERIMG/@y.TBLUSER.PICTURE" alt="Profil Fotoğrafı" loading="lazy" />
                                                    }
                                                    else
                                                    {
                                                        <img hidden src="~/USERIMG/stockuser.png" loading="lazy" />
                                                    }
                                                    if (y.TBLUSER != null && !string.IsNullOrEmpty(y.TBLUSER.USERNAME))
                                                    {
                                                        <span hidden>@y.TBLUSER.USERNAME</span>
                                                        <div style="color:#ffffff;">Cevap yazdığınız kişi</div>
                                                        <input type="text" name="USERID" value="@y.TBLUSER.USERNAME" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                    }
                                                    else
                                                    {
                                                        <input type="text" name="USERID" value="" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                    }
                                                    <br />
                                                    <div style="color:#ffffff;">Yorum</div>
                                                    <textarea name="COMMENT" class="form-control" style="border: none; color: #ffffff; background-color: #313131; outline: solid #000000; height: 200px;" required></textarea>
                                                    <br />
                                                    <div style="width:100%; display:flex; justify-content:center;">
                                                        <button style="background-color: #FF7F00; width:90px; height:40px; border-radius:20px; border:none; font-size:1rem;" type="submit"> Gönder </button>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <a href="@Url.RouteUrl("Giriş")" style="text-decoration: none; color: white;">
                                    <i class="bi bi-reply"></i>Cevapla
                                </a>
                            }
                            <div class="likeandunlike">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    if (liked.HasValue && liked.Value)
                                    {
                                        <div class="like active" data-comment-id="@y.ID">
                                            <a style="text-decoration: none; cursor: pointer; color: white;" onclick="handleLikeOrUnlike(this, @y.ID, @userID, true)">
                                                <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                                <span id="like-count-@y.ID">@y.TBLANIMECOMMENTLIKE.Where(z => z.STATUS == true).Count()</span>
                                            </a>
                                        </div>

                                        <div class="unlike" data-comment-id="@y.ID">
                                            <a style="text-decoration: none; cursor: pointer; color: white;" onclick="handleLikeOrUnlike(this, @y.ID, @userID, false)">
                                                <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                                <span id="unlike-count-@y.ID">@y.TBLANIMECOMMENTLIKE.Where(z => z.STATUS == false).Count()</span>
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="like" style="margin-right:5px;" data-comment-id="@y.ID">
                                            <a style="text-decoration: none; cursor: pointer; color: white;" onclick="handleLikeOrUnlike(this, @y.ID, @userID, true)">
                                                <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                                <span id="like-count-@y.ID">@y.TBLANIMECOMMENTLIKE.Where(z => z.STATUS == true).Count()</span>
                                            </a>
                                        </div>
                                        <div class="unlike active" data-comment-id="@y.ID">
                                            <a style="text-decoration: none; cursor: pointer; color: white;" onclick="handleLikeOrUnlike(this, @y.ID, @userID, false)">
                                                <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                                <span id="unlike-count-@y.ID">@y.TBLANIMECOMMENTLIKE.Where(z => z.STATUS == false).Count()</span>
                                            </a>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="like" style="margin-right:5px;" data-comment-id="@y.ID">
                                        <a style="text-decoration:none; color:white;" href="@Url.RouteUrl("Giriş")">
                                            <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                            @y.TBLANIMECOMMENTLIKE.Where(z => z.STATUS == true).Count()
                                        </a>
                                    </div>
                                    <div class="unlike" data-comment-id="@y.ID">
                                        <a style="text-decoration:none; color:white;" href="@Url.RouteUrl("Giriş")">
                                            <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                            @y.TBLANIMECOMMENTLIKE.Where(z => z.STATUS == false).Count()
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
    else
    {
        <div style="width:100%; height:100px; display:flex; align-items:center; justify-content:center;">
            <h5 style="color:#ffffff;">Bu animeye henüz yorum yapılmamıştır</h5>
        </div>
    }

</div>


<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script>
    function handleLikeOrUnlike(element, commentId, userId, isLike) {
        var likeButton, unlikeButton, likeCountSpan, unlikeCountSpan;

        if (isLike) {
            likeButton = $(element);
            unlikeButton = likeButton.parent().siblings(".unlike").find("a");
            likeCountSpan = likeButton.find("span");
            unlikeCountSpan = unlikeButton.find("span");
        } else {
            unlikeButton = $(element);
            likeButton = unlikeButton.parent().siblings(".like").find("a");
            unlikeCountSpan = unlikeButton.find("span");
            likeCountSpan = likeButton.find("span");
        }

        $.ajax({
            type: "POST",
            url: "/AnimeDetail/LikeOrUnlikeComment",
            data: { id: commentId, userId: userId, isLike: isLike },
            success: function (data) {
                likeCountSpan.text(data.likeCount);
                unlikeCountSpan.text(data.unlikeCount);
                if (isLike) {
                    if (data.likeCount > 0) {
                        likeButton.addClass("active").css('color', '#FF7F00');
                        unlikeButton.removeClass("active").css('color', '#ffffff')
                    } else {
                        likeButton.addClass("active").css('color', '#FF7F00');
                        unlikeButton.removeClass("active").css('color', '#ffffff');
                    }
                } else {
                    if (data.unlikeCount > 0) {
                        unlikeButton.addClass("active").css('color', '#FF7F00');
                        likeButton.removeClass("active").css('color', '#ffffff');
                    } else {
                        unlikeButton.addClass("active").css('color', '#FF7F00');
                        likeButton.removeClass("active").css('color', '#ffffff');
                    }
                }
            }
        });
    }
</script>