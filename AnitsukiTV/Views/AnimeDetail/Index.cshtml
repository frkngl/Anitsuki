@using AnitsukiTV.Models
@model TabeList

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-Z6GHK21HCJ"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-Z6GHK21HCJ');
    </script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>@ViewBag.animeeee izle - Anitsuki</title>
    <meta name="description" content="@ViewBag.anime izle, @ViewBag.anime animesini Türkçe altyazılı ve Full HD seçeneğiyle ücretsiz izleyin. Tüm bölümleri hemen keşfedin!" />
    <meta name="language" content="Turkish" />
    <meta name="geo.placename" content="Turkey" />
    <meta name="location" content="Türkiye, TR, Turkey" />
    <meta name="robots" content="index, follow, max-image-preview:large, noarchive" />
    <meta name="theme-color" content="#000000" />
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-title" content="Anitsuki">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">

    <meta property="og:title" content="@ViewBag.anime izle - Anitsuki" />
    <meta property="og:url" content="https://www.anitsuki.com/anime/@ViewBag.AnimeId/@ViewBag.animee-@ViewBag.Seasonnn-sezon-izle" />
    <meta property="og:type" content="video.tv_show" />
    <meta property="og:image" content="https://www.anitsuki.com/IMG/@ViewBag.banner">
    <meta property="og:description" content="@ViewBag.anime izle, @ViewBag.anime animesini Türkçe altyazılı ve Full HD seçeneğiyle ücretsiz izleyin. Tüm bölümleri hemen keşfedin!" />

    <link href="~/bootstrap-icons/font/bootstrap-icons.min.css" rel="stylesheet" type="text/css" />
    <link href="~/fontawesome/css/all.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" type="text/css" />
    <link rel="stylesheet" href="~/css/AnimeDetail.css" />
    <link href="~/Content/toastr.min.css" rel="stylesheet" />

    <link rel="shortcut icon" href="~/WEBIMG/aylogotitle.png" type="image/png" />
    <link rel="apple-touch-icon" href="~/WEBIMG/aylogotitle.png" type="image/png">
    <style>
        .warningg {
            display: flex;
            position: fixed;
            bottom: 50%;
            transform: translate(76%,50%);
            right: 0;
            width: 260px;
            height: 50px;
            background-color: #313131;
            z-index: 9999;
            border-top-left-radius: 20px;
            border-bottom-left-radius: 20px;
            color: #ffffff;
            transition: all 0.3s ease-in-out;
        }

            .warningg.active {
                transform: translate(0%,50%);
            }

            .warningg .harley {
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 2rem;
                color: #ffffff;
                margin: 3px 0px 0px 0px;
                padding: 0px 5px;
                cursor: pointer;
            }

            .warningg .joker {
                display: flex;
                justify-content: center;
                flex-direction: column;
                padding: 0px 5px 0px 0px;
            }

        header #nabermudur ul {
            max-height: 300px;
            overflow-y: auto;
        }

        img.lazy {
            opacity: 0; /* Başlangıçta görünmez */
            transition: opacity 0.5s ease-in; /* Geçiş efekti */
        }

        img {
            opacity: 1; /* Yüklenince görünür hale gelir */
        }

        .friendadd {
            position: absolute;
            width: 370px;
            height: calc(100vh - 60px);
            background-color: #101010;
            top: 60px;
            right: 0;
            transform: translateX(100%);
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
            transition: all 0.3s ease-in-out;
        }

            .friendadd.active {
                transform: translateX(0%);
            }

            .friendadd.full-screen {
                position: fixed; /* Sabit konumda olmasını sağlar */
                top: 60px;
                right: 0;
                width: 100%;
                height: calc(100vh - 60px);
                border-radius: 0; /* Kenar yuvarlamalarını kaldır */
                z-index: 1000; /* Diğer öğelerin üstünde görünmesi için */
                box-shadow: none;
            }

            .friendadd #friendaddclose {
                position: absolute;
                width: 30px;
                height: 30px;
                left: 10px;
                background-color: #cccc;
                display: none;
            }

                .friendadd #friendaddclose.active {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    left: 10px;
                    background-color: #cccc;
                    display: block;
                }

            .friendadd .searchhh {
                position: relative;
                width: 200px;
                height: 40px;
                margin-left: 50%;
                transform: translateX(-50%);
                margin-top: 25px;
                margin-bottom: 15px;
            }

                .friendadd .searchhh .fa-magnifying-glass {
                    position: absolute;
                    top: 50%;
                    left: 10px;
                    z-index: 9;
                    font-size: 1rem;
                }

                .friendadd .searchhh input {
                    position: absolute;
                    top: 0;
                    left: 0;
                    background-color: #313131;
                    color: #ffffff;
                    border: none;
                    width: 100%;
                    height: 100%;
                    border-radius: 20px;
                    padding: 0px 0px 0px 35px;
                }

            .friendadd #menuFull11 {
                list-style-type: none;
                padding: 0px 10px;
                width: 100%;
                height: calc(100vh - 150px);
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: start;
                overflow-y: auto;
            }

                .friendadd #menuFull11::-webkit-scrollbar {
                    display: none;
                }

                .friendadd #menuFull11 a {
                    color: white;
                    text-decoration: none;
                }


        .anime {
            position: absolute;
            width: 370px;
            height: calc(100vh - 60px);
            background-color: #101010;
            top: 60px;
            right: 0;
            transform: translateX(100%);
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
            transition: all 0.3s ease-in-out;
        }

            .anime.active {
                transform: translateX(0%);
            }


            /* Mobil tam ekran stili */
            .anime.full-screen {
                position: fixed; /* Sabit konumda olmasını sağlar */
                top: 60px;
                right: 0;
                width: 100%;
                height: calc(100vh - 60px);
                border-radius: 0; /* Kenar yuvarlamalarını kaldır */
                z-index: 1000; /* Diğer öğelerin üstünde görünmesi için */
                box-shadow: none;
            }


            .anime #animeclose {
                position: absolute;
                width: 30px;
                height: 30px;
                left: 10px;
                background-color: #cccc;
                display: none;
            }



                .anime #animeclose.active {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    left: 10px;
                    background-color: #cccc;
                    display: block;
                }



            .anime .searchhhh {
                position: relative;
                width: 200px;
                height: 40px;
                margin-left: 50%;
                transform: translateX(-50%);
                margin-top: 25px;
                margin-bottom: 15px;
            }


                .anime .searchhhh .fa-magnifying-glass {
                    position: absolute;
                    top: 50%;
                    left: 10px;
                    z-index: 9;
                    font-size: 1rem;
                }



                .anime .searchhhh input {
                    position: absolute;
                    top: 0;
                    left: 0;
                    background-color: #313131;
                    color: #ffffff;
                    border: none;
                    width: 100%;
                    height: 100%;
                    border-radius: 20px;
                    padding: 0px 0px 0px 35px;
                }



            .anime #menuFull1111 {
                list-style-type: none;
                padding: 0px 10px;
                width: 100%;
                height: calc(100vh - 150px);
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: start;
                overflow-y: auto;
            }


                .anime #menuFull1111::-webkit-scrollbar {
                    display: none;
                }

                .anime #menuFull1111 a {
                    color: white;
                    text-decoration: none;
                }

        .user ul li a:hover {
            background-color: #ffffff;
            color: #000000 !important;
        }

        header #nabermudur ul {
            max-height: 300px;
            overflow-y: auto;
            width: 300px;
        }

            header #nabermudur ul .dracula {
                position: relative;
            }

                header #nabermudur ul .dracula::after {
                    content: "";
                    display: block;
                    position: absolute;
                    width: 90%;
                    height: 1px;
                    background: #cecece;
                    left: 50%;
                    transform: translateX(-50%);
                    bottom: 0;
                }

        #nabermudur button {
            background-color: transparent;
            border: none;
            outline: none;
            color: orange;
            transition: all 0.3s;
        }

            #nabermudur button:hover {
                color: #ffffff;
            }


        .comments .detail .user .name a {
            color: #ffffff;
            text-decoration: none;
            transition: all 0.2s;
        }

            .comments .detail .user .name a:hover {
                color: #FF7F00;
            }

        .like.active a,
        .unlike.active a {
            color: orange;
        }

        .like a,
        .unlike a {
            color: white;
        }

        input[type="checkbox"] {
            /* Checkbox'ın görünümünü gizle */
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            /* Boyutu büyüt */
            width: 20px;
            height: 20px;
            /* Kenarlık ve arka plan */
            border: 2px solid #FF7F00;
            background-color: #000000;
            /* Yuvarlak köşeler */
            border-radius: 4px;
        }

            /* Checkbox işaretlendiğinde */
            input[type="checkbox"]:checked {
                /* Checkbox içindeki işaretin görünümünü özelleştir */
                background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="%23000000" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>');
                /* Arka plan rengini beyaz yap, böylece sadece turuncu işaret görünür */
                background-color: #FF7F00;
            }

        /* Yazıların seçilemez olması için */
        label {
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .spoiler-blur {
            transition: filter 0.3s;
            position: relative;
            overflow: hidden;
        }

            .spoiler-blur::before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: #151515; /* Dark overlay */
                z-index: 8;
                border-radius: 10px;
                cursor: pointer;
            }

            .spoiler-blur::after {
                content: "Bu yorum spoiler içerir okumak için tıklayınız.";
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                color: #ffffff;
                z-index: 9; /* Ensure text is above the dark overlay */
                cursor: pointer;
            }

            .spoiler-blur.active::before,
            .spoiler-blur.active::after {
                display: none; /* Hide both overlays when active */
            }
    </style>
</head>

<body>
    <div class="loader">

    </div>
    @if (ViewBag.IsFeatureActive)
    {
        <div id="snow-container"></div>
    }

    <div class="warningg">
        <div class="harley" id="harley">
            <i class="bi bi-arrow-left-circle-fill toggle-icon"></i>
        </div>
        <div class="joker">
            @foreach (var q in Model.Anime)
            {
                <div class="category">
                    <i style="margin-right:5px;" class="bi bi-heart-fill"></i> Favoriye ekleyen @q.TBLFAVORITES.Count() kişi
                </div>
                <div class="category">
                    <i style="margin-right:5px;" class="bi bi-clock-fill"></i>  Sonra izleyecek @q.TBLWATCHLATER.Count() kişi
                </div>
            }
        </div>

    </div>
    <header>
        <div class="container-xl">
            <div class="row">
                <div class="logo col-2">
                    <a href="@Url.RouteUrl("Anasayfa")"><img src="~/WEBIMG/logo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"><img class="logomobile" src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"></a>
                </div>

                <input style="display: none;" type="checkbox" id="check">
                <label for="check" class="hamburger-btn col-1">
                    <span></span>
                </label>

                <nav class="col-8">
                    <ul>
                        <li><a href="@Url.RouteUrl("Anasayfa")" class="active"><i class="fa-solid fa-house"></i> Anasayfa</a></li>
                        <li><a href="@Url.RouteUrl("Animeler")"><i class="fa-solid fa-list"></i> Animeler</a></li>
                        <li><a href="@Url.RouteUrl("Bağış")"><i class="bi bi-cash-stack"></i> Bağış</a></li>
                        <li><a href="@Url.RouteUrl("Watch Together")"><i class="bi bi-tv"></i> WT Yakında</a></li>
                    </ul>
                </nav>
                <div class="box col-2">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div id="nabermudur" style="margin-right:5px;" class="search">
                            <button type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i id="notification-icon" style="font-size:1.5rem;" class="bi bi-bell"></i>
                            </button>
                            @if (Model.Notifications.Any(n => n.ISCLEARED == false))
                            {
                                <ul id="nabermudurr" style="background-color:#313131;" class="dropdown-menu">
                                    @foreach (var notification in Model.Notifications.OrderByDescending(x => x.ID))
                                    {
                                        <li style="display: flex; align-items: center; padding: 5px;" class="dracula">
                                            @if (notification.ANIMEID != null && notification.EPISODEID == null)
                                            {
                                                <a style="display: flex; position:relative; align-items: center; padding: 5px; text-decoration:none;" href="@Url.RouteUrl("Anime Detay", new { animeId = notification.ANIMEID ,animeName = notification.TBLANIME.ANIMENAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",",""), seasonNumber = notification.TBLANIME.TBLSEASON?.FirstOrDefault(x => x.ANIMEID == notification.ID)?.SEASONNUMBER ?? 0})">
                                                    @if (notification.PROFILEPICTURE != null)
                                                    {
                                                        <div style="position:absolute;" class="skeleton2"></div>
                                                        <img data-src="/USERIMG/@notification.PROFILEPICTURE" class="lazy" style="object-fit:cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                    }
                                                    else
                                                    {
                                                        <div style="position:absolute;" class="skeleton2"></div>
                                                        <img data-src="/USERIMG/stockuser.png" class="lazy" style="object-fit: cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                    }
                                                    <div style=" width: 225px; color: #ffffff;">
                                                        <strong style="font-size: 0.9rem; display: block; margin-bottom:-22px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; ">
                                                            @notification.TBLANIME.ANIMENAME
                                                        </strong><br />
                                                        <span style="font-size: 0.9rem; width: 100%; display: inline-block; line-height: 1.2;">@notification.MESSAGE</span><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;"> @TimeAgo(notification.CREATED.Value)</span>

                                                    </div>
                                                </a>
                                            }
                                            else if (notification.ANIMEID == null && notification.EPISODEID == null)
                                            {
                                                <a style="display: flex; position:relative; align-items: center; padding: 5px; text-decoration:none;" href="@Url.RouteUrl("Profil", new { userName = notification.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">
                                                    @if (notification.PROFILEPICTURE != null)
                                                    {
                                                        <div style="position:absolute;" class="skeleton2"></div>
                                                        <img data-src="/USERIMG/@notification.PROFILEPICTURE" class="lazy" style="object-fit:cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                    }
                                                    else
                                                    {
                                                        <div style="position:absolute;" class="skeleton2"></div>
                                                        <img data-src="/USERIMG/stockuser.png" class="lazy" style="object-fit: cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                    }
                                                    <div style=" width: 220px; color: #ffffff;">
                                                        <strong style="font-size: 0.9rem; display: block; margin-bottom: -25px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; ">@notification.USERNAME</strong><br />
                                                        <span style="font-size: 0.9rem;">@notification.MESSAGE</span><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">@TimeAgo(notification.CREATED.Value)</span>
                                                    </div>
                                                </a>
                                            }
                                            else if (notification.ANIMEID != null && notification.EPISODEID != null)
                                            {
                                                <a style="display: flex; position:relative; align-items: center; padding: 5px; text-decoration:none;" href="@Url.RouteUrl("Video", new {episodeID = notification.EPISODEID, animeName = notification.TBLANIME.ANIMENAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",",""), seasonNumber = notification.TBLANIME.TBLSEASON.FirstOrDefault().SEASONNUMBER, episodeNumber = notification.EPISODEID })">
                                                    @if (notification.PROFILEPICTURE != null)
                                                    {
                                                        <div style="position:absolute;" class="skeleton2"></div>
                                                        <img data-src="/USERIMG/@notification.PROFILEPICTURE" class="lazy" style="object-fit:cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                    }
                                                    else
                                                    {
                                                        <div style="position:absolute;" class="skeleton2"></div>
                                                        <img data-src="/USERIMG/stockuser.png" class="lazy" style="object-fit: cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                    }
                                                    <div style=" width: 225px; color: #ffffff;">
                                                        <strong style="font-size: 0.9rem; display: block; margin-bottom:-22px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; ">
                                                            @notification.TBLANIME.ANIMENAME S@(notification.TBLANIME.TBLSEASON.FirstOrDefault().SEASONNUMBER) B@(notification.TBLEPISODE.EPINUMBER)
                                                        </strong><br />
                                                        <span style="font-size: 0.9rem; width: 100%; display: inline-block; line-height: 1.2;">@notification.MESSAGE</span><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">@TimeAgo(notification.CREATED.Value)</span>
                                                    </div>
                                                </a>
                                            }
                                        </li>
                                    }
                                    <li>
                                        <button id="clear-notifications" style="margin: 0px; width: 100%; padding: 5px 12px; color: #ffffff; background: none; border: none;">Temizle</button>
                                    </li>
                                </ul>
                            }
                            else
                            {
                                <ul style="background-color:#313131; width:150px;" class="dropdown-menu">
                                    <li style="color:white; text-align:center;">Bildirim Kutusu Boş</li>
                                </ul>
                            }
                        </div>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div style="margin-left:0px;" class="search">
                            <a href="#" id="toggleFriendAdd">
                                <i style="font-size:1.8rem !important;" class="bi bi-person-add"></i>
                            </a>
                        </div>
                    }
                    <div style="margin-right:-10px;" class="search">
                        <a href="#" id="toggleAnime">
                            <i class="bi bi-search"></i>
                        </a>
                    </div>

                    <div class="anime">
                        <div style="position:relative;" id="animeContent">
                            <button id="animeclose" class="btn-close"></button>
                            <div class="searchhhh">
                                <i style="color:white;" class="fa-solid fa-magnifying-glass fa-xl"></i>
                                <input type="text" autocomplete="off" name="searchTags1111" id="searchTags1111" placeholder="Anime Ara..." />
                            </div>
                            <ul id="menuFull1111" style="display: none; overflow-y: auto;">
                                @foreach (var anime in ViewBag.AllAnimes)
                                {
                                    // Sezon bilgisini ayrı bir ViewBag'den alalım
                                    var season = ((IEnumerable<dynamic>)ViewBag.SeasonInfo).FirstOrDefault(s => s.ANIMEID == anime.ID);
                                    var seasonNumber = season != null ? (int?)season.SEASONNUMBER : null;

                                    <li style="margin:10px 0px;width:100%; display:flex; justify-content:space-between; align-items:center;">
                                        <div style="width:100%;">
                                            <a style="display:flex;position:relative;" href="@Url.RouteUrl("Anime Detay", new { animeID = anime.ID, animeName = anime.ANIMENAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",",""), seasonNumber = seasonNumber ?? 0})">
                                                <div style="position:absolute;" class="skeleton3"></div>
                                                <img data-src="/IMG/@anime.BANNER" class="lazy" style="width:25%; height:120px; object-fit:cover; margin-right:7px; border-radius:5px;" />
                                                <div style="overflow-wrap: break-word; overflow: auto; white-space: normal; width:75%; line-height:1;">
                                                    <strong style="font-size:0.9rem; color:orange;">@anime.ANIMENAME</strong><br />
                                                    <span style="font-size: 0.8rem; color: #cccccc;">@anime.DETAIL.Substring(0, 130)</span>
                                                </div>
                                            </a>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="friendadd">
                        <div style="position:relative;" id="followersContent">
                            <button id="friendaddclose" class="btn-close"></button>
                            <div class="searchhh">
                                <i style="color:white;" class="fa-solid fa-magnifying-glass fa-xl"></i>
                                <input type="text" autocomplete="off" name="searchTags11" id="searchTags11" placeholder="Arkadaş Ara..." />
                            </div>
                            <ul id="menuFull11" style="display: none; overflow-y: auto;">
                                @foreach (var user in Model.Users.Where(x => x.STATUS == true))
                                {
                                    <li style="margin:10px 0px;width:100%; display:flex; justify-content:space-between; align-items:center;">
                                        <div>
                                            @{
                                                AnitsukiTVEntities y = new AnitsukiTVEntities();
                                                var Followers = y.TBLFOLLOWERS.Where(f => f.FOLLOWEDID == user.ID).Select(f => f.TBLUSER).ToList();
                                                ViewBag.FollowersCountt = Followers.Count(x => x.STATUS == true);
                                            }
                                            <a style="display:flex;position:relative;" href="@Url.RouteUrl("Profil", new { userName = user.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">
                                                @if (user.PICTURE != null)
                                                {
                                                    <div style="position:absolute;" class="skeleton1"></div>
                                                    <img data-src="/USERIMG/@user.PICTURE" class="lazy" style="width:50px; height:50px; object-fit:cover; margin-right:7px; border-radius:50%;" />
                                                    <div>
                                                        <strong style="font-size:0.9rem;">@user.USERNAME</strong><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">Takipçi:@ViewBag.FollowersCountt</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div style="position:absolute;" class="skeleton1"></div>
                                                    <img data-src="/USERIMG/stockuser.png" class="lazy" style="width: 50px; height: 50px; object-fit: cover; margin-right: 7px; border-radius: 50%;" />
                                                    <div>
                                                        <strong style="font-size:0.9rem;">@user.USERNAME</strong><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">Takipçi:@ViewBag.FollowersCountt</span>
                                                    </div>
                                                }
                                            </a>
                                        </div>
                                        <div style="color:white;">
                                            <button onclick="followUser  (@user.ID, this)" style="background-color: transparent; border: none; color: #FF7F00;">
                                                @if (ViewBag.FollowedUserIds.Contains(user.ID))
                                                {
                                                    <i style="font-size:2.5rem;" class="bi bi-person-fill-dash"></i> <!-- Takipten çıkma simgesi -->
                                                }
                                                else
                                                {
                                                    <i style="font-size: 2.5rem;" class="bi bi-person-fill-add"></i> <!-- Takip etme simgesi -->
                                                }
                                            </button>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="user">
                        <div style="height:60px; display:flex; align-items:center; margin-left:10px;" class="dropdown">
                            @{ AnitsukiTVEntities db = new AnitsukiTVEntities(); }
                            @if (User.Identity.IsAuthenticated)
                            {
                                var currentUser = db.TBLUSER.FirstOrDefault(u => u.USERNAME == User.Identity.Name);
                                string userNameUrl = User.Identity.Name.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".", "").Replace(",", "");

                                <button style="background-color:transparent; border:none; outline:none; color:orange;" class="dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    @if (currentUser != null && currentUser.PICTURE != null)
                                    {
                                        <img width="40" height="40" style="border-radius:50%; object-fit:cover;" src="~/USERIMG/@currentUser.PICTURE">
                                    }
                                    else
                                    {
                                        <img width="40" height="40" style="border-radius: 50%; object-fit: cover;" src="~/USERIMG/stockuser.png">
                                    }
                                </button>
                                <ul style="background-color:#313131;" class="dropdown-menu dropdown-menu-end">
                                    <li><a style="margin:0px; padding:5px 12px; color:white;" class="dropdown-item" href="@Url.RouteUrl("Profil", new { userName = userNameUrl })"><i style="font-size:1.3rem;" class="bi bi-person"></i> Profil</a></li>
                                    <li><a style="margin:0px; padding: 5px 15px; color: white;" class="dropdown-item" href="/signout"><i style="font-size:1.3rem;" class="bi bi-box-arrow-right"></i> Çıkış Yap</a></li>
                                </ul>
                            }
                            else
                            {
                                <a style="margin-left:-15px !important;" href="@Url.RouteUrl("Giriş")"><i class="bi bi-person"></i></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="content3">
        @foreach (var x in Model.Anime.Where(x => x.STATUS == true))
        {
            <div class="watson">
                <div class="watson-bg">
                    <img class="desktop" src="~/IMG/@x.BIGBANNER">
                    <img class="mobile" src="~/IMG/@x.BANNER">
                </div>
                <div class="originalimg">
                    <img style="border-radius:10px;" class="desktop" src="~/IMG/@x.BIGBANNER">
                    <img style="border-radius:10px;" class="mobile" src="~/IMG/@x.BANNER">
                </div>
            </div>
            <div class="animeabout">
                <div class="text">
                    <div style="line-height:1; overflow-wrap: break-word; white-space: normal;" class="title">
                        @x.ANIMENAME
                    </div>
                    <div class="like">
                        <button data-action="favorite" class="watchlater" onclick="addWatchLater(@Model.Anime.FirstOrDefault().ID, this)">
                            @if (ViewBag.isWatchLater)
                            {
                                <i class="bi bi-clock-fill"></i>
                            }
                            else
                            {
                                <i class="bi bi-clock"></i>
                            }
                        </button>
                        <button data-action="favorite" class="favorite" onclick="addFavorite(@Model.Anime.FirstOrDefault().ID, this)">
                            @if (ViewBag.IsFavorite)
                            {
                                <i class="bi bi-heart-fill"></i>
                            }
                            else
                            {
                                <i class="bi bi-heart"></i>
                            }
                        </button>
                    </div>
                </div>
                <div class="animedes">
                    <div class="totalepisode">
                        <i class="bi bi-collection-play"></i> Toplam Sezon: @x.TBLSEASON.Count()
                    </div>
                    <div class="totalepisode">
                        <i class="bi bi-play-circle"></i> Toplam Bölüm: @x.TBLEPISODE.Count()
                    </div>
                    <div class="createyear">
                        <i class="bi bi-calendar"></i> Yapım Yılı: @x.DATE.Value.ToString("yyyy")
                    </div>
                    <div class="category">
                        <i class="bi bi-ticket"></i> Tür: @x.TBLCATEGORY.CATEGORYNAME, @x.TYPE
                    </div>
                    <div style="overflow-wrap: break-word; overflow: auto; white-space: normal;" class="des">
                        @x.DETAIL
                    </div>
                    <div class="imdbandmal">
                        <div class="imdb">
                            IMDb @x.IMDB
                        </div>
                        <div class="mal">
                            MAL @x.MYANIMELIST
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="allepisode">
            <div class="searchcategory">
                <div class="search">
                    <i class="fa-solid fa-magnifying-glass fa-xl"></i>
                    <input type="text" autocomplete="off" name="searchTags" id="searchTags" placeholder="Bölüm Arayınız" />
                </div>
                <div style="width:auto;" class="dropdown">
                    <button class="btn dropdown-toggle" type="button" data-bs-toggle="dropdown"
                            aria-expanded="false">
                        @ViewBag.Season
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        @foreach (var y in Model.Season.Where(y => y.STATUS == true))
                        {
                            var animeID = Model.Anime.FirstOrDefault().ID;
                            var animeName = Model.Anime.FirstOrDefault().ANIMENAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".", "").Replace(",", ""); // Replace spaces with dashes and convert to lower case
                            if (y.SEASONNAME == null)
                            {
                                <li><a class="dropdown-item" href="@Url.RouteUrl("Anime Detay", new { animeID = animeID, animeName = animeName, seasonNumber = y.SEASONNUMBER })">@y.SEASONNUMBER Sezon</a></li>
                            }
                            else
                            {
                                <li><a class="dropdown-item" href="@Url.RouteUrl("Anime Detay", new { animeID = animeID, animeName = animeName, seasonNumber = y.SEASONNUMBER })">@y.SEASONNAME</a></li>
                            }
                        }
                    </ul>
                </div>
            </div>
            <div class="episode">
                <ul id="menuFull">
                    @foreach (var z in Model.Episode.Where(z => z.STATUS == true))
                    {
                        <li>
                            <a href="@Url.RouteUrl("Video", new {episodeID = z.ID, animeName = z.TBLANIME.ANIMENAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",",""), seasonNumber = z.TBLSEASON.SEASONNUMBER, episodeNumber = z.EPINUMBER })">
                                <div class="box">
                                    <div class="img">
                                        <i class="bi bi-play-circle"></i>
                                        <img src="~/IMG/@z.TBLSEASON.BANNER" alt="anime izle, türkçe altyazı anime izle, anitsuki" loading="lazy" />
                                    </div>
                                    <div class="detail">
                                        <div style="width: 100%; margin-top: -10px; line-height: 20px; height: 20px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; " class="title">
                                            <span>B@(z.EPINUMBER)</span> - @(z.EPISODENAME)
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </li>
                    }
                </ul>
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="commentplace">
                    <div class="headcomment">
                        <div class="title">
                            <i class="bi bi-pencil-square"></i> Düşüncelerinizi Yazın
                        </div>
                        @using (Html.BeginForm("LeaveComment", null, new { animeName = ViewBag.animeName, seasonNumber = ViewBag.seasonNumber }, FormMethod.Post, new { style = "width: 100%;" }))
                        {
                            <form style="width:100%;">
                                <textarea style="width:100%" name="COMMENT" required></textarea>
                                <input type="hidden" name="ANIMEID" value="@ViewBag.deger" />
                                <div style="display:flex;">
                                    <label style="color:#ffffff; display:flex; align-items:center; margin-right:5px;">
                                        <input style="margin-right:5px;" type="checkbox" name="SPOILER" value="true" /> Spoiler içeriyor
                                    </label>
                                    <button><i class="bi bi-send"></i> Gönder</button>
                                </div>
                            </form>
                        }

                    </div>
                </div>
            }
            else
            {
                <div style="display:flex; justify-content:center; margin-top:50px;">
                    <p style="font-size:1.1rem;color:#ffffff;">Düşüncelerinizi yazmak için</p><a style="text-decoration: none;" href="@Url.RouteUrl("Giriş")"><span style="color: #FF7F00; margin-left:5px; font-size:1.1rem;">Giriş Yapın</span></a>
                </div>
            }
            <div class="commentboxes">
                <div class="title">
                    <i class="bi bi-chat"></i> @ViewBag.AnimeCount Yorum
                </div>
                <div class="comments">
                    @if (Model.PagedRootComments.Any())
                    {
                        @helper RenderComment(TBLANIMECOMMENT comment, int level, List<TBLANIMECOMMENT> allComments)
                        {
                            string isim = "commentModal_" + comment.ID;

                            AnitsukiTVEntities db = new AnitsukiTVEntities();

                            var userID = User.Identity.IsAuthenticated ? db.TBLUSER.Where(u => u.USERNAME == User.Identity.Name).Select(u => u.ID).FirstOrDefault() : 0;

                            var likeExist = comment.TBLANIMECOMMENTLIKE.Any(y => y.USERID == userID);

                            var liked = comment.TBLANIMECOMMENTLIKE.FirstOrDefault(y => y.USERID == userID)?.STATUS;

                            string commentClass = level == 1 ? "comment1" : "comment2";

                            if (User.Identity.IsAuthenticated && (comment.USERID == userID || (comment.USTID.HasValue && allComments.Any(c => c.ID == comment.USTID && c.USERID == userID))))
                            {
                                commentClass += " comment-highlight";
                            }

                            string spoilerClass = comment.SPOILER == true && comment.USERID != userID ? "spoiler-blur" : "";

                            <div class="@commentClass @spoilerClass" style="margin-left: @(level * 20); background-color:#151515; border-radius:10px; padding:10px 5px 10px 10px;">
                                @if (comment.TBLUSER.PICTURE != null)
                                {
                                    <img src="~/USERIMG/@comment.TBLUSER.PICTURE" loading="lazy">
                                }
                                else
                                {
                                    <img src="~/USERIMG/stockuser.png" loading="lazy" />
                                }
                                <div class="detail">
                                    <div style="display:flex; flex-direction:column; align-items:start;" class="user">
                                        <div class="name">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <a href="@Url.RouteUrl("Profil", new { userName = comment.TBLUSER.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">@comment.TBLUSER.USERNAME</a>
                                            }
                                            else
                                            {
                                                <a href="@Url.RouteUrl("Giriş", new { returnUrl = Request.RawUrl })">@comment.TBLUSER.USERNAME</a>
                                            }
                                        </div>
                                        <div style="margin-left:0; margin-top:-10px; color:#ccc;" class="year">
                                            @TimeAgo(comment.DATE.Value)
                                        </div>
                                    </div>
                                    <div class="text">
                                        @{
                                            var parentComment = allComments.FirstOrDefault(c => c.ID == comment.USTID);
                                            var parentUsername = parentComment != null ? parentComment.TBLUSER.USERNAME : null;
                                        }
                                        @if (comment.USTID.HasValue && parentUsername != null)
                                        {
                                            <strong style="color:orange;">@parentUsername</strong>
                                        }
                                        @comment.COMMENT
                                    </div>
                                    <div class="more">
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <div class="reply" data-bs-toggle="modal" data-bs-target="#@isim">
                                                <i class="bi bi-reply"></i>Cevapla
                                            </div>
                                            <!-- Modal form here -->
                                            <div style="margin-top: 100px;" class="modal fade" id="@isim" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div style="background-color: #000000; box-shadow: 0px 0px 20px #FF7F00" class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 style="color:#ffffff;" class="modal-title fs-5" id="exampleModalLabel">Cevap Yazıyorsunuz</h1>
                                                            <button style="background-color: #ffffff; color:#ffffff;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            @using (Html.BeginForm("ReplyComment", null, new { animeName = ViewBag.animeName, seasonNumber = ViewBag.seasonNumber }, FormMethod.Post))
                                                            {
                                                                <input hidden type="text" name="animeName" value="@ViewBag.animeName" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                                <input hidden type="text" name="USTID" value="@comment.ID" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                                <input hidden type="text" name="ANIMEID" value="@ViewBag.anime" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                                if (comment.TBLUSER.PICTURE != null)
                                                                {
                                                                    <img hidden src="~/USERIMG/@comment.TBLUSER.PICTURE" alt="Profil Fotoğrafı" loading="lazy" />
                                                                }
                                                                else
                                                                {
                                                                    <img hidden src="~/USERIMG/stockuser.png" loading="lazy" />
                                                                }
                                                                if (comment.TBLUSER != null && !string.IsNullOrEmpty(comment.TBLUSER.USERNAME))
                                                                {
                                                                    <span hidden>@comment.TBLUSER.USERNAME</span>
                                                                    <div style="color:#ffffff;">Cevap yazdığınız kişi</div>
                                                                    <input type="text" name="USERID" value="@comment.TBLUSER.USERNAME" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                                }
                                                                else
                                                                {
                                                                    <input type="text" name="USERID" value="" readonly class="form-control" style="border: none; color:#ffffff; outline: solid #000000; background-color: #313131; " />
                                                                }
                                                                <br />
                                                                <div style="color:#ffffff;">Yorum</div>
                                                                <textarea name="COMMENT" class="form-control" style="border: none; color: #ffffff; background-color: #313131; outline: solid #000000; height: 200px;" required></textarea>
                                                                <br />
                                                                <div style="display:flex; flex-direction:column; width:100%; align-items:center; justify-content:center; margin-top:-25px;">
                                                                    <label style="color:#ffffff; display:flex; align-items:center; margin-right:5px;">
                                                                        <input style="margin-right:5px;" type="checkbox" name="SPOILER" value="true" /> Spoiler içeriyor
                                                                    </label>
                                                                    <button style="background-color: #FF7F00; width:90px; height:40px; border-radius:20px; border:none; font-size:1rem; margin-top:10px;" type="submit"> Gönder </button>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            // Kullanıcı giriş yapmamışsa, giriş yapması için yönlendiriyoruz
                                            <a href="@Url.RouteUrl("Giriş")" style="text-decoration: none; color: white;">
                                                <i class="bi bi-reply"></i>Cevapla
                                            </a>
                                        }
                                        <div class="likeandunlike">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                // Kullanıcı giriş yapmışsa beğeni ve beğenmeme seçeneklerini gösteriyoruz
                                                <div class="like @(liked.HasValue && liked.Value ? "active" : "")" data-comment-id="@comment.ID">
                                                    <a style="text-decoration: none; cursor: pointer;" onclick="handleLikeOrUnlike(this, @comment.ID, @userID, true)">
                                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                                        <span id="like-count-@comment.ID">@comment.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == true).Count()</span>
                                                    </a>
                                                </div>

                                                <div class="unlike @(liked.HasValue && !liked.Value ? "active" : "")" data-comment-id="@comment.ID">
                                                    <a style="text-decoration: none; cursor: pointer;" onclick="handleLikeOrUnlike(this, @comment.ID, @userID, false)">
                                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                                        <span id="unlike-count-@comment.ID">@comment.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == false).Count()</span>
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                // Kullanıcı giriş yapmamışsa, beğeni/beğenmeme sayılarını gösteriyoruz ama etkileşime girilemiyor
                                                <div class="like" style="margin-right:5px;" data-comment-id="@comment.ID">
                                                    <a style="text-decoration:none; color:white;" href="@Url.RouteUrl("Giriş")">
                                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-up"></i>
                                                        @comment.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == true).Count()
                                                    </a>
                                                </div>
                                                <div class="unlike" data-comment-id="@comment.ID">
                                                    <a style="text-decoration:none; color:white;" href="@Url.RouteUrl("Giriş")">
                                                        <i style="margin-right:2px;" class="bi bi-hand-thumbs-down"></i>
                                                        @comment.TBLANIMECOMMENTLIKE.Where(y => y.STATUS == false).Count()
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            // Bu yoruma yapılan cevapları da aynı şekilde render ediyoruz
                            foreach (var reply in allComments.Where(y => y.USTID == comment.ID))
                            {
                                @RenderComment(reply, level + 1, allComments)
                            }
                        }

                        foreach (var rootComment in Model.PagedRootComments)
                        {
                            @RenderComment(rootComment, 1, Model.AnimeComments)
                        }

                        if (ViewBag.PageCount > 1)
                        {
                            <div style="width:100%; margin-top:25px; display:flex; justify-content:center; align-items:center;">
                                <nav aria-label="Page navigation example">
                                    <ul class="pagination custom-pagination">
                                        @if (ViewBag.CurrentPage > 1)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;"
                                                   href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = ViewBag.CurrentPage - 1 })" aria-label="Previous">
                                                    <span aria-hidden="true">«</span>
                                                </a>
                                            </li>
                                        }

                                        @if (ViewBag.PageCount <= 5)
                                        {
                                            for (int i = 1; i <= ViewBag.PageCount; i++)
                                            {
                                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                    <a class="page-link" style="@(i == ViewBag.CurrentPage ? "background-color: #FF7F00 !important; border: 1px solid #FF7F00 !important; color: #000000;" : "background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;")"
                                                       href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = i })">@i</a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            if (ViewBag.CurrentPage < 4)
                                            {
                                                for (int i = 1; i <= 3; i++)
                                                {
                                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                        <a class="page-link" style="@(i == ViewBag.CurrentPage ? "background-color: #FF7F00 !important; border: 1px solid #FF7F00 !important; color: #000000;" : "background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;")"
                                                           href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = i })">@i</a>
                                                    </li>
                                                }
                                                <li class="page-item disabled"><span style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;" class="page-link">...</span></li>
                                                <li class="page-item">
                                                    <a class="page-link" style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;"
                                                       href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = ViewBag.PageCount })">@ViewBag.PageCount</a>
                                                </li>
                                            }
                                            else if (ViewBag.CurrentPage > ViewBag.PageCount - 3)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;"
                                                       href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = 1 })">1</a>
                                                </li>
                                                <li class="page-item disabled"><span style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;" class="page-link">...</span></li>
                                                for (int i = ViewBag.PageCount - 2; i <= ViewBag.PageCount; i++)
                                                {
                                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                        <a class="page-link" style="@(i == ViewBag.CurrentPage ? "background-color: #FF7F00 !important; border: 1px solid #FF7F00 !important; color: #000000;" : "background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;")"
                                                           href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = i })">@i</a>
                                                    </li>
                                                }
                                            }
                                            else
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;"
                                                       href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = 1 })">1</a>
                                                </li>
                                                <li class="page-item disabled"><span style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;" class="page-link">...</span></li>
                                                for (int i = ViewBag.CurrentPage - 1; i <= ViewBag.CurrentPage + 1; i++)
                                                {
                                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                        <a class="page-link" style="@(i == ViewBag.CurrentPage ? "background-color: #FF7F00 !important; border: 1px solid #FF7F00 !important; color: #000000;" : "background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;")"
                                                           href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = i })">@i</a>
                                                    </li>
                                                }
                                                <li class="page-item disabled"><span style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;" class="page-link">...</span></li>
                                                <li class="page-item">
                                                    <a class="page-link" style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;"
                                                       href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = ViewBag.PageCount })">@ViewBag.PageCount</a>
                                                </li>
                                            }
                                        }

                                        @if (ViewBag.CurrentPage < ViewBag.PageCount)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" style="background-color: #000000; border: 1px solid #FF7F00; color: #FF7F00;"
                                                   href="@Url.Action("Index", new { animeID = ViewBag.anime, animeName = ViewBag.animee, seasonNumber = ViewBag.Seasonnn, page = ViewBag.CurrentPage + 1 })" aria-label="Next">
                                                    <span aria-hidden="true">»</span>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            </div>
                        }
                    }
                    else
                    {
                        <div style="width:100%; height:100px; display:flex; align-items:center; justify-content:center;">
                            <h5 style="color:#ffffff;">Bu animeye henüz yorum yapılmamıştır</h5>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <footer>
        <div class="footerimg">
        </div>
        <div class="detail">
            <div class="page">
                <div class="title">
                    Sayfalar
                </div>
                <ul>
                    <li><a href="@Url.RouteUrl("Hakkımızda")">Hakkımızda</a></li>
                    <li><a href="@Url.RouteUrl("Gizlilik Politikası")">Gizlilik Politikası</a></li>
                </ul>
            </div>
            <div class="social">
                <div class="title">
                    Sosyal Medyalar
                </div>
                <ul>
                    <li><a target="_blank" href="https://www.youtube.com/channel/UC3AfwO_XmAvYEtw6FWZXZcw"><i class="fa-brands fa-youtube fa-l"></i> Youtube</a></li>
                    @*<li><a href="#"><i class="fa-brands fa-x-twitter fa-l"></i> Twitter-X</a></li>*@
                    <li><a target="_blank" href="https://www.instagram.com/anitsukitv/"><i class="fa-brands fa-instagram fa-l"></i> Instagram</a></li>
                    <li><a target="_blank" href="https://discord.gg/emkmqardFF"><i class="bi bi-discord"></i> Discord</a></li>
                </ul>
            </div>
            <div class="contact">
                <div class="title">
                    İletişim
                </div>
                <ul>
                    <li>anitsuki.destek@gmail.com</li>
                </ul>
            </div>
        </div>
        <div class="copyright ">
            <img src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki">
            <div class="text">
                Copyright © Anitsuki @DateTime.Now.Year. Tüm hakları saklıdır.
            </div>
        </div>
    </footer>
</body>
</html>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>

<script>
    document.querySelectorAll('nav a').forEach(link => {
        link.classList.remove('active');

        if (link.href === window.location.href) {
            link.classList.add('active');
        }
    });
    window.addEventListener("load", () => {
        const loader = document.querySelector(".loader");

        loader.classList.add("loader-hidden");
    })
    document.addEventListener('keydown', function (event) {
        if (event.code === 'Space' && event.target.tagName !== 'TEXTAREA' && event.target.tagName !== 'INPUT') {
            event.preventDefault();
            event.stopPropagation();
        }
    });
    function addFavorite(animeID, elem) {
        $.ajax({
            type: "POST",
            url: "/AnimeDetail/AddFavorite",
            data: { animeID: animeID },
            success: function (data) {
                if (data.success) {
                    $(elem).html(data.isFavorite ? "<i style='color:#ffffff;' class='bi bi-heart-fill'></i>" : "<i style='color:#ffffff;' class='bi bi-heart'></i>");
                    if (data.isFavorite) {
                        toastr["success"](data.message, "Ekleme işlemi");
                    } else {
                        toastr["error"](data.message, "Çıkarma işlemi");
                    }
                } else {
                    window.location.href = "@Url.RouteUrl("Giriş")";
                }
            }
        });
    }
    function addWatchLater(animeID, element) {
        $.ajax({
            type: "POST",
            url: "/AnimeDetail/WatchLater",
            data: { animeID: animeID },
            success: function (data) {
                if (data.success) {
                    $(element).find("i").toggleClass("bi-clock bi-clock-fill");
                    if (data.isWatchLater) {
                        toastr["success"](data.message, "Ekleme işlemi");
                    } else {
                        toastr["error"](data.message, "Çıkarma işlemi");
                    }
                } else {
                    window.location.href = "@Url.RouteUrl("Giriş")";
                }
            }
        });
    }
</script>
<script>
    const togglePositionalHeaderStyles = () => {
        if (window.scrollY > 0 && !header.classList.contains("header-change")) {
            header.classList.add("header-change");
        };
        if (window.scrollY === 0 && header.classList.contains("header-change")) {
            header.classList.remove("header-change");
        };
    };

    let timeoutID = null;
    const header = document.querySelector("header");
    togglePositionalHeaderStyles();
    window.addEventListener("scroll", () => {
        togglePositionalHeaderStyles();
        if (timeoutID) clearTimeout(timeoutID);
        timeoutID = setTimeout(() => {
            togglePositionalHeaderStyles();
        }, 50);
    });
</script>
<script>
    document.querySelectorAll('nav a').forEach(link => {
        link.classList.remove('active');

        if (link.href === window.location.href) {
            link.classList.add('active');
        }
    });
    window.addEventListener("load", () => {
        const loader = document.querySelector(".loader");

        loader.classList.add("loader-hidden");
    })

    jQuery.expr[':'].contains = function (a, i, m) {
        return jQuery(a).text().toUpperCase()
            .indexOf(m[3].toUpperCase()) >= 0;
    };
    $(document).ready(function () {
        $("#searchTags").keyup(function () {
            var value = $("#searchTags").val();
            if (value.length == 0) {
                $("#menuFull li").show();
            } else {
                $("#menuFull li").hide();
                $("#menuFull li:contains(" + value + ")").show();
            }

        });
    });
</script>

@if (ViewBag.IsFeatureActive)
{
    <script>
        // script.js
        const snowContainer = document.getElementById('snow-container');

        function createSnowflake() {
            const snowflake = document.createElement('div');
            const size = Math.random() * 5 + 2; // Kar tanesi boyutu
            const leftPosition = Math.random() * window.innerWidth; // Rastgele soldan konum
            const animationDuration = Math.random() * 3 + 2; // Rastgele animasyon süresi

            snowflake.classList.add('snowflake');
            snowflake.style.width = `${size}px`;
            snowflake.style.height = `${size}px`;
            snowflake.style.left = `${leftPosition}px`;
            snowflake.style.animationDuration = `${animationDuration}s`;

            snowContainer.appendChild(snowflake);

            // Kar tanesinin düşüşü tamamlandığında sil
            setTimeout(() => {
                snowflake.remove();
            }, animationDuration * 1000);
        }

        // Kar tanelerini sürekli oluştur
        setInterval(createSnowflake, 500); // Her 100 ms'de bir kar tanesi oluştur
    </script>
}


<script>
    // jQuery kullanarak metin eşleşmesini kontrol eden özel bir seçici
    jQuery.expr[':'].usernameContains = function (a, i, m) {
        var username = $(a).find('strong:first-of-type').text().toUpperCase();
        return username.indexOf(m[3].toUpperCase()) >= 0;
    };

    $(document).ready(function () {
        $("#searchTags11").on("input", function () { // 'input' olayını kullanarak gerçek zamanlı filtreleme
            var value = $(this).val(); // Mevcut giriş değerini al

            if (value.length < 2) {
                $("#menuFull11").hide(); // Eğer giriş 2 karakterden azsa kullanıcıları gizle
            } else {
                $("#menuFull11").show(); // Giriş değeri varsa kullanıcı listesini göster
                $("#menuFull11 li").hide(); // İlk olarak tüm kullanıcıları gizle

                // Giriş değerini içeren kullanıcı adlarını bul ve hepsini göster
                var matchingItems = $("#menuFull11 li:usernameContains(" + value + ")");
                matchingItems.show();
            }
        });

        // Sayfa yüklendiğinde kullanıcı listesini gizle
        $("#menuFull11").hide(); // Bu satır, sayfa yüklendiğinde kullanıcı listesinin gizlenmesini sağlar.
    });
</script>

<script>
    // jQuery kullanarak metin eşleşmesini kontrol eden özel bir seçici
    jQuery.expr[':'].usernameContains = function (a, i, m) {
        var username = $(a).find('strong:first-of-type').text().toUpperCase();
        return username.indexOf(m[3].toUpperCase()) >= 0;
    };

    $(document).ready(function () {
        $("#searchTags1111").on("input", function () { // 'input' olayını kullanarak gerçek zamanlı filtreleme
            var value = $(this).val(); // Mevcut giriş değerini al

            if (value.length < 2) {
                $("#menuFull1111").hide(); // Eğer giriş boşsa kullanıcıları gizle
            } else {
                $("#menuFull1111").show(); // Giriş değeri varsa kullanıcı listesini göster
                $("#menuFull1111 li").hide(); // İlk olarak tüm kullanıcıları gizle

                // Giriş değerini içeren kullanıcı adlarını bul ve hepsini göster
                var matchingItems = $("#menuFull1111 li:usernameContains(" + value + ")");
                matchingItems.show();
            }
        });

        // Sayfa yüklendiğinde kullanıcı listesini gizle
        $("#menuFull1111").hide(); // Bu satır, sayfa yüklendiğinde kullanıcı listesinin gizlenmesini sağlar.
    });
</script>

<script>
    function followUser(followedUserId, button) {
        $.ajax({
            type: "POST",
            url: "/User/FollowUser ",
            data: { followedUserId: followedUserId },
            success: function (response) {
                if (response.success) {
                    if (response.isFollowing) {
                        // Takip etme durumu
                        $(button).html('<i style="font-size:2.5rem; margin-right:5px;" class="bi bi-person-fill-dash"></i>'); // Takipten çıkma simgesi
                        toastr.success('Artık bu kullanıcıyı takip ediyorsunuz.'); // Başarı bildirimi
                    } else {
                        // Takipten çıkma durumu
                        $(button).html('<i style="font-size:2.5rem; margin-right:5px;" class="bi bi-person-fill-add"></i>'); // Takip etme simgesi
                        toastr.error('Artık bu kullanıcıyı takipten çıkıyorsunuz.'); // Hata bildirimi
                    }
                } else {
                    toastr.error(response.message || 'Kullanıcıyı takip etmeye/çıkarma işleminde bir hata oluştu.'); // Hata bildirimi
                }
            },
            error: function () {
                toastr.error('İsteğinizi işleme alırken bir hata oluştu.'); // Genel hata bildirimi
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        // Eğer yeni bildirim varsa ikon dolu olacak
        var hasNewNotification = @Model.Notifications.Any(n => n.ISCLEARED == false).ToString().ToLower();
        if (hasNewNotification) {
            $('#notification-icon').removeClass('bi-bell').addClass('bi-bell-fill');
        }

        $('#notification-icon').click(function () {
            // İkon tıklandığında dolu ikon boş ikona dönüşecek
            $(this).removeClass('bi-bell-fill').addClass('bi-bell');
        });

        $('#clear-notifications').click(function () {
            $.ajax({
                type: "POST",
                url: "/User/ClearNotifications",
                success: function (data) {
                    if (data.success) {
                        $('#nabermudurr').empty();
                        $('#nabermudurr').append('<li style="color:white; text-align:center;">Bildirim Kutusu Boş</li>');
                        $('#nabermudurr').css('width', '150px');
                        $('#notification-icon').removeClass('bi-bell-fill').addClass('bi-bell');
                        toastr.success(data.message, "Bildirimler Temizlendi");
                    } else {
                        toastr.error(data.message, "Hata");
                    }
                }
            });
        });
    });
</script>
<script>
    const toggleButton = document.querySelector('.harley');
    const likewatchcount = document.querySelector('.warningg');
    const toggleIcon = document.querySelector('.toggle-icon');

    toggleButton.addEventListener('click', function (event) {
        event.preventDefault(); // Linkin varsayılan davranışını engelle
        likewatchcount.classList.toggle('active'); // active sınıfını ekle veya kaldır

        // İkonu değiştir
        if (toggleIcon.classList.contains('bi-arrow-left-circle-fill')) {
            toggleIcon.classList.remove('bi-arrow-left-circle-fill');
            toggleIcon.classList.add('bi-arrow-right-circle-fill');
        } else {
            toggleIcon.classList.remove('bi-arrow-right-circle-fill');
            toggleIcon.classList.add('bi-arrow-left-circle-fill');
        }
    });

    // Sayfanın herhangi bir yerine tıklandığında likewatchcount'ı kapat
    document.addEventListener('click', function (event) {
        if (!likewatchcount.contains(event.target) && !toggleButton.contains(event.target)) {
            likewatchcount.classList.remove('active'); // active sınıfını kaldır
            toggleIcon.classList.remove('bi-arrow-right-circle-fill');
            toggleIcon.classList.add('bi-arrow-left-circle-fill'); // İkonu sol yap
        }
    });
</script>
@if (User.Identity.IsAuthenticated)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function isMobile() {
                return /Mobi|Android|iPhone/i.test(navigator.userAgent);
            }

            // FriendAdd için fonksiyonlar
            const toggleButton = document.getElementById('toggleFriendAdd');
            const friendAdd = document.querySelector('.friendadd');
            const toggleButton2 = document.getElementById('friendaddclose');

            // Anime için fonksiyonlar
            const toggleButtonn = document.getElementById('toggleAnime');
            const friendAddd = document.querySelector('.anime');
            const toggleButton22 = document.getElementById('animeclose');

            // Sayfa yüklendiğinde, eğer mobil cihazsa friendAdd ve anime'yi tam ekran yap
            if (isMobile()) {
                if (friendAdd) friendAdd.classList.add('full-screen');
                if (toggleButton2) toggleButton2.classList.add('active');
                if (friendAddd) friendAddd.classList.add('full-screen');
                if (toggleButton22) toggleButton22.classList.add('active');
            }

            // FriendAdd Toggle
            if (toggleButton) {
                toggleButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAdd) friendAdd.classList.toggle('active');
                });
            }

            if (toggleButton2) {
                toggleButton2.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAdd) friendAdd.classList.toggle('active');
                });
            }

            // Anime Toggle
            if (toggleButtonn) {
                toggleButtonn.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAddd) friendAddd.classList.toggle('active');
                });
            }

            if (toggleButton22) {
                toggleButton22.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAddd) friendAddd.classList.remove('active');
                });
            }

            // Sayfanın herhangi bir yerine tıklandığında friendAdd ve anime'yi kapat
            document.addEventListener('click', function (event) {
                if (friendAdd && !friendAdd.contains(event.target) && !toggleButton.contains(event.target) && friendAdd.classList.contains('active')) {
                    friendAdd.classList.remove('active');
                }
                if (friendAddd && !friendAddd.contains(event.target) && !toggleButtonn.contains(event.target) && friendAddd.classList.contains('active')) {
                    friendAddd.classList.remove('active');
                }
            });
        });
    </script>
}
else
{
    <script>
        function isMobile() {
            return /Mobi|Android|iPhone/i.test(navigator.userAgent);
        }

        const toggleButtonn = document.getElementById('toggleAnime');
        const friendAddd = document.querySelector('.anime');
        const toggleButton22 = document.getElementById('animeclose');

        // Sayfa yüklendiğinde, eğer mobil cihazsa friendAdd'i tam ekran yap
        window.onload = function () {
            if (isMobile()) {
                friendAddd.classList.add('full-screen'); // Tam ekran sınıfını ekle
                toggleButton22.classList.add('active'); // Kapat butonunu aktif yap
            }
        };

        toggleButtonn.addEventListener('click', function (event) {
            event.preventDefault(); // Linkin varsayılan davranışını engelle
            friendAddd.classList.toggle('active'); // active sınıfını ekle veya kaldır
        });

        toggleButton22.addEventListener('click', function (event) {
            event.preventDefault(); // Linkin varsayılan davranışını engelle
            friendAddd.classList.remove('active'); // active sınıfını kaldır
        });

        // Sayfanın herhangi bir yerine tıklandığında friendAdd'ı kapat
        document.addEventListener('click', function (event) {
            if (!friendAddd.contains(event.target) && !toggleButtonn.contains(event.target)) {
                friendAddd.classList.remove('active'); // active sınıfını kaldır
            }
        });
    </script>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const lazyImages = document.querySelectorAll("img[data-src]");

        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    const skeleton = img.previousElementSibling; // Skeleton loader

                    // Resim yüklenirken skeleton göster
                    skeleton.style.display = "block";

                    // Resim kaynağını ayarla
                    img.src = img.dataset.src;

                    // Resim yüklendiğinde
                    img.onload = () => {
                        skeleton.style.display = "none"; // Skeleton'ı gizle
                        img.style.display = "block"; // Resmi göster
                        img.classList.remove("lazy"); // Lazy sınıfını kaldır
                    };

                    observer.unobserve(img); // Resmi gözlemden kaldır
                }
            });
        });

        lazyImages.forEach(image => {
            imageObserver.observe(image); // Her resmi gözlemle
        });
    });
</script>


<script>
    function handleLikeOrUnlike(element, commentId, userId, isLike) {
        var likeButton, unlikeButton, likeCountSpan, unlikeCountSpan;

        if (isLike) {
            likeButton = $(element);
            unlikeButton = likeButton.parent().siblings(".unlike").find("a");
            likeCountSpan = likeButton.find("span");
            unlikeCountSpan = unlikeButton.find("span");
        } else {
            unlikeButton = $(element);
            likeButton = unlikeButton.parent().siblings(".like").find("a");
            unlikeCountSpan = unlikeButton.find("span");
            likeCountSpan = likeButton.find("span");
        }

        $.ajax({
            type: "POST",
            url: "/AnimeDetail/LikeOrUnlikeComment",
            data: { id: commentId, userId: userId, isLike: isLike },
            success: function (data) {
                likeCountSpan.text(data.likeCount);
                unlikeCountSpan.text(data.unlikeCount);
                if (isLike) {
                    if (data.likeCount > 0) {
                        likeButton.addClass("active").css('color', '#FF7F00');
                        unlikeButton.removeClass("active").css('color', '#ffffff')
                    } else {
                        likeButton.addClass("active").css('color', '#FF7F00');
                        unlikeButton.removeClass("active").css('color', '#ffffff');
                    }
                } else {
                    if (data.unlikeCount > 0) {
                        unlikeButton.addClass("active").css('color', '#FF7F00');
                        likeButton.removeClass("active").css('color', '#ffffff');
                    } else {
                        unlikeButton.addClass("active").css('color', '#FF7F00');
                        likeButton.removeClass("active").css('color', '#ffffff');
                    }
                }
            }
        });
    }
</script>

@functions {
    public static string TimeAgo(DateTime dateTime)
    {
        TimeSpan timeSpan = DateTime.Now - dateTime;

        if (timeSpan.TotalSeconds < 60)
        {
            return "az önce";
        }
        else if (timeSpan.TotalMinutes < 60)
        {
            int minutes = (int)timeSpan.TotalMinutes;
            return $"{minutes} dakika önce";
        }
        else if (timeSpan.TotalHours < 24)
        {
            int hours = (int)timeSpan.TotalHours;
            return $"{hours} saat önce";
        }
        else if (timeSpan.TotalDays < 30)
        {
            int days = (int)timeSpan.TotalDays;
            return $"{days} gün önce";
        }
        else if (timeSpan.TotalDays < 365)
        {
            int months = (int)(timeSpan.TotalDays / 30);
            return $"{months} ay önce";
        }
        else
        {
            int years = (int)(timeSpan.TotalDays / 365);
            return $"{years} yıl önce";
        }
    }
}

@if (TempData["success"] != null)
{
    <script type="text/javascript">
        toastr["success"]("@TempData["success"]", "İşlem Bilgisi")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["error"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["error"]", "İşlem Bilgisi")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["messageerror"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["messageerror"]", "İşlem Bilgisi")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}


<script>
    function toggleSpoiler(element) {
        element.classList.add('active');
    }

    document.querySelectorAll('.spoiler-blur').forEach(item => {
        item.addEventListener('click', function (e) {
            if (e.target !== this) return; // Check if click is on the div itself, not children
            toggleSpoiler(this);
            // Remove the event listener after first click so the blur doesn't toggle back
            this.removeEventListener('click', arguments.callee);
        });
    });
</script>



@if (TempData["success1"] != null)
{
    <script type="text/javascript">
        toastr["success"]("@TempData["success1"]", "İşlem Bilgisi")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["error1"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["error1"]", "İşlem Bilgisi")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["messageerror1"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["messageerror1"]", "İşlem Bilgisi")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}








