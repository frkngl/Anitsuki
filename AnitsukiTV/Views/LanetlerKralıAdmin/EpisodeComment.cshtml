@using AnitsukiTV.Models
@model PagedList.IPagedList<TBLEPISODECOMMENT>
@{
    ViewBag.Title = "EpisodeComment";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link rel="stylesheet" href="~/Content/toastr.min.css" />
<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div style="position:relative;" class="card-body">
                <nav style="position:absolute; right:0;" class="navbar navbar-expand-lg bg-body-tertiary">
                    <div class="container-fluid">
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <form action="@Url.Action("EpisodeComment", "LanetlerKralıAdmin")" class="d-flex" role="search">
                                <input class="form-control me-2" type="search" placeholder="Kullanıcı Ara" name="Comment" aria-label="Search">
                                <button class="btn btn-outline-success" type="submit">Ara</button>
                            </form>
                        </div>
                    </div>
                </nav>
                <p class="card-description">
                    Anime Bölüm Yorumları
                </p>
                <table style="margin-top:50px;" class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>KULLANICI ADI</th>
                            <th>ANIME</th>
                            <th>BÖLÜM</th>
                            <th>MESAJ</th>
                            <th>Güncelle</th>
                            <th>Durum</th>
                            @{ AnitsukiTVEntities db = new AnitsukiTVEntities();}
                            @if (User.Identity.IsAuthenticated)
                            {
                                var username = User.Identity.Name;
                                var admin = db.TBLADMIN.Where(x => x.USERNAME == username).FirstOrDefault();
                                if (admin != null)
                                {
                                    if (admin.ADMINROLEID == 1)
                                    {
                                        <th>Sil</th>
                                    }
                                }
                            }
                            <th>Detay</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var x in Model.OrderByDescending(x => x.ID))
                        {
                            <tr>
                                <td><div style="width: 75px; height: 100px; overflow-wrap: break-word; overflow:auto; white-space: normal; line-height: 1; font-size: 1rem; ">@x.ID</div></td>
                                <td><div style="width: 100px; height: 100px; overflow-wrap: break-word; overflow:auto; white-space: normal; line-height: 1; font-size: 1rem; ">@x.TBLUSER.USERNAME</div></td>
                                <td><div style="width: 250px; height: 100px; overflow-wrap: break-word; overflow:auto; white-space: normal; line-height: 1; font-size: 1rem; ">@x.TBLEPISODE.TBLANIME.ANIMENAME</div></td>
                                <td><div style="width: 250px; height: 100px; overflow-wrap: break-word; overflow:auto; white-space: normal; line-height: 1; font-size: 1rem; ">@x.TBLEPISODE.EPISODENAME</div></td>
                                <td><div style="width: 300px; height: 100px; overflow-wrap: break-word; overflow:auto; white-space: normal; line-height: 1; font-size: 1rem; ">@x.COMMENT</div></td>
                                <td><a class="btn btn-warning" href="/LanetlerKralıAdmin/UpdateEpisodeComment/@x.ID">Güncelle</a></td>
                                <td>
                                    @if (x.STATUS == true)
                                    {
                                        <button class="btn btn-success btn-sm toggle-status" data-id="@x.ID">Aktif</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-warning btn-sm toggle-status" data-id="@x.ID">Pasif</button>
                                    }
                                </td>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    var username = User.Identity.Name;
                                    var admin = db.TBLADMIN.Where(x => x.USERNAME == username).FirstOrDefault();
                                    if (admin != null)
                                    {
                                        if (admin.ADMINROLEID == 1)
                                        {
                                            <td>@Html.ActionLink("Sil", "Deleteeeeeee", new { id = x.ID }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm" + "('Bu Yorumu silmek istediğinize emin misiniz?');" })</td>
                                        }
                                    }
                                }
                                <td><a style="color:#ffffff;" href="/LanetlerKralıAdmin/EpisodeCommentDetaıl/@x.ID" class="btn btn-light">Detay</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div style="width:100%; display:flex; justify-content:center;">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("EpisodeComment", new { Comment = ViewBag.Comment, p = ViewBag.CurrentPage - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            @for (int i = 1; i <= ViewBag.PageCount; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("EpisodeComment", new { Comment = ViewBag.Comment, p = i })">@i</a>
                </li>
            }
            @if (ViewBag.CurrentPage < ViewBag.PageCount)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("EpisodeComment", new { Comment = ViewBag.Comment, p = ViewBag.CurrentPage + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>

<script>
    $(document).on('click', '.toggle-status', function () {
        var id = $(this).data('id');
        var button = $(this);

        $.ajax({
            url: '/LanetlerKralıAdmin/ActivePassive7/' + id,
            type: 'POST',
            success: function (result) {
                // Durum değiştiyse butonu güncelle
                if (result.status) {
                    button.removeClass('btn-warning').addClass('btn-success').text('Aktif');
                } else {
                    button.removeClass('btn-success').addClass('btn-warning').text('Pasif');
                }
            },
            error: function () {
                alert('Bir hata oluştu. Lütfen tekrar deneyin.');
            }
        });
    });
</script>



@if (TempData["success"] != null)
{
    <script type="text/javascript">
        toastr["success"]("@TempData["success"]", "Güncelleme")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["error"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["error"]", "Güncelleme Hatası")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}


@if (TempData["success1"] != null)
{
    <script type="text/javascript">
        toastr["success"]("@TempData["success1"]", "Silme")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}

@if (TempData["error1"] != null)
{
    <script type="text/javascript">
        toastr["error"]("@TempData["error1"]", "Silme Hatası")

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    </script>
}


