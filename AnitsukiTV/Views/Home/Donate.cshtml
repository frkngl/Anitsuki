@using AnitsukiTV.Models
@model TabeList

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Bağış - Anitsuki</title>
    <meta name="description" content="Anitsuki'ye bağış yaparak destek olun. Desteklerinizle daha fazla içerik sunmamıza yardımcı olabilirsiniz." />
    <meta name="language" content="Turkish" />
    <meta name="geo.placename" content="Turkey" />
    <meta name="location" content="Türkiye, TR, Turkey" />
    <meta name="robots" content="noindex, nofollow, noarchive" />
    <meta name="apple-mobile-web-app-title" content="Anitsuki">
    <meta name="theme-color" content="#000000" />
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">

    <meta property="og:title" content="Bağış - Anitsuki" />
    <meta property="og:url" content="https://www.anitsuki.com/bagis" />
    <meta property="og:image" content="https://www.anitsuki.com/WEBIMG/aylogo.png">
    <meta property="og:type" content="website" />
    <meta property="og:description" content="Anitsuki'ye bağış yaparak destek olun. Desteklerinizle daha fazla içerik sunmamıza yardımcı olabilirsiniz." />

    <link href="~/bootstrap-icons/font/bootstrap-icons.min.css" rel="stylesheet" type="text/css" />
    <link href="~/fontawesome/css/all.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/toastr.min.css" type="text/css" />
    <link rel="stylesheet" href="~/css/Donate.css" />

    <link rel="shortcut icon" href="~/WEBIMG/aylogotitle.png" type="image/png" />
    <link rel="apple-touch-icon" href="~/WEBIMG/aylogotitle.png" type="image/png">
    <style>
        img.lazy {
            opacity: 0; /* Başlangıçta görünmez */
            transition: opacity 0.5s ease-in; /* Geçiş efekti */
        }

        img {
            opacity: 1; /* Yüklenince görünür hale gelir */
        }

        .friendadd {
            position: absolute;
            width: 370px;
            height: calc(100vh - 60px);
            background-color: #101010;
            top: 60px;
            right: 0;
            transform: translateX(100%);
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
            transition: all 0.3s ease-in-out;
        }

            .friendadd.active {
                transform: translateX(0%);
            }

            .friendadd.full-screen {
                position: fixed; /* Sabit konumda olmasını sağlar */
                top: 60px;
                right: 0;
                width: 100%;
                height: calc(100vh - 60px);
                border-radius: 0; /* Kenar yuvarlamalarını kaldır */
                z-index: 1000; /* Diğer öğelerin üstünde görünmesi için */
                box-shadow: none;
            }

            .friendadd #friendaddclose {
                position: absolute;
                width: 30px;
                height: 30px;
                left: 10px;
                background-color: #cccc;
                display: none;
            }

                .friendadd #friendaddclose.active {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    left: 10px;
                    background-color: #cccc;
                    display: block;
                }

            .friendadd .searchhh {
                position: relative;
                width: 200px;
                height: 40px;
                margin-left: 50%;
                transform: translateX(-50%);
                margin-top: 25px;
                margin-bottom: 15px;
            }

                .friendadd .searchhh .fa-magnifying-glass {
                    position: absolute;
                    top: 50%;
                    left: 10px;
                    z-index: 9;
                    font-size: 1rem;
                }

                .friendadd .searchhh input {
                    position: absolute;
                    top: 0;
                    left: 0;
                    background-color: #313131;
                    color: #ffffff;
                    border: none;
                    width: 100%;
                    height: 100%;
                    border-radius: 20px;
                    padding: 0px 0px 0px 35px;
                }

            .friendadd #menuFull11 {
                list-style-type: none;
                padding: 0px 10px;
                width: 100%;
                height: calc(100vh - 150px);
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: start;
                overflow-y: auto;
            }

                .friendadd #menuFull11::-webkit-scrollbar {
                    display: none;
                }

                .friendadd #menuFull11 a {
                    color: white;
                    text-decoration: none;
                }


        .anime {
            position: absolute;
            width: 370px;
            height: calc(100vh - 60px);
            background-color: #101010;
            top: 60px;
            right: 0;
            transform: translateX(100%);
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
            transition: all 0.3s ease-in-out;
        }

            .anime.active {
                transform: translateX(0%);
            }


            /* Mobil tam ekran stili */
            .anime.full-screen {
                position: fixed; /* Sabit konumda olmasını sağlar */
                top: 60px;
                right: 0;
                width: 100%;
                height: calc(100vh - 60px);
                border-radius: 0; /* Kenar yuvarlamalarını kaldır */
                z-index: 1000; /* Diğer öğelerin üstünde görünmesi için */
                box-shadow: none;
            }


            .anime #animeclose {
                position: absolute;
                width: 30px;
                height: 30px;
                left: 10px;
                background-color: #cccc;
                display: none;
            }



                .anime #animeclose.active {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    left: 10px;
                    background-color: #cccc;
                    display: block;
                }



            .anime .searchhhh {
                position: relative;
                width: 200px;
                height: 40px;
                margin-left: 50%;
                transform: translateX(-50%);
                margin-top: 25px;
                margin-bottom: 15px;
            }


                .anime .searchhhh .fa-magnifying-glass {
                    position: absolute;
                    top: 50%;
                    left: 10px;
                    z-index: 9;
                    font-size: 1rem;
                }



                .anime .searchhhh input {
                    position: absolute;
                    top: 0;
                    left: 0;
                    background-color: #313131;
                    color: #ffffff;
                    border: none;
                    width: 100%;
                    height: 100%;
                    border-radius: 20px;
                    padding: 0px 0px 0px 35px;
                }



            .anime #menuFull1111 {
                list-style-type: none;
                padding: 0px 10px;
                width: 100%;
                height: calc(100vh - 150px);
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: start;
                overflow-y: auto;
            }


                .anime #menuFull1111::-webkit-scrollbar {
                    display: none;
                }

                .anime #menuFull1111 a {
                    color: white;
                    text-decoration: none;
                }

        .user ul li a:hover {
            background-color: #ffffff;
            color: #000000 !important;
        }

        header #nabermudur ul {
            max-height: 300px;
            overflow-y: auto;
        }

        #nabermudur button {
            background-color: transparent;
            border: none;
            outline: none;
            color: orange;
            transition: all 0.3s;
        }

            #nabermudur button:hover {
                color: #ffffff;
            }
    </style>
</head>
<body>
    <div class="loader">

    </div>
    @if (ViewBag.IsFeatureActive)
    {
        <div id="snow-container"></div>
    }

    <header>
        <div class="container-xl">
            <div class="row">
                <div class="logo col-2">
                    <a href="@Url.RouteUrl("Anasayfa")"><img src="~/WEBIMG/logo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"><img class="logomobile" src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki"></a>
                </div>

                <input style="display: none;" type="checkbox" id="check">
                <label for="check" class="hamburger-btn col-1">
                    <span></span>
                </label>

                <nav class="col-8">
                    <ul>
                        <li><a href="@Url.RouteUrl("Anasayfa")" class="active"><i class="fa-solid fa-house"></i> Anasayfa</a></li>
                        <li><a href="@Url.RouteUrl("Animeler")"><i class="fa-solid fa-list"></i> Animeler</a></li>
                        <li><a href="@Url.RouteUrl("Bağış")"><i class="bi bi-cash-stack"></i> Bağış</a></li>
                        <li><a href="@Url.RouteUrl("Watch Together")"><i class="bi bi-tv"></i> WT Yakında</a></li>
                    </ul>
                </nav>
                <div class="box col-2">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div id="nabermudur" style="margin-right:5px;" class="search">
                            <button type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i id="notification-icon" style="font-size:1.5rem;" class="bi bi-bell"></i>
                            </button>
                            <ul id="nabermudurr" style="background-color:#313131;" class="dropdown-menu">
                                @if (Model.Notifications.Any(n => n.ISCLEARED == false))
                                {
                                    foreach (var notification in Model.Notifications.OrderByDescending(x => x.ID))
                                    {
                                        <li style="display: flex; align-items: center; padding: 5px;">
                                            <a style="display: flex; position:relative; align-items: center; padding: 5px; text-decoration:none;" href="@Url.RouteUrl("Profil", new { userName = notification.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">
                                                @if (notification.PROFILEPICTURE != null)
                                                {
                                                    <div style="position:absolute;" class="skeleton2"></div>
                                                    <img data-src="/USERIMG/@notification.PROFILEPICTURE" class="lazy" style="object-fit:cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                }
                                                else
                                                {
                                                    <div style="position:absolute;" class="skeleton2"></div>
                                                    <img data-src="/USERIMG/stockuser.png" class="lazy" style="object-fit: cover; width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;" />
                                                }
                                                <div style="color: #ffffff;">
                                                    <strong style="font-size:0.9rem;">@notification.USERNAME</strong><br />
                                                    <span style="font-size: 0.9rem;">@notification.MESSAGE</span><br />
                                                    <span style="font-size: 0.8rem; color: #cccccc;">@notification.CREATED.Value.ToString("dd.MM.yyyy")</span>
                                                </div>
                                            </a>
                                        </li>
                                    }
                                    <li>
                                        <button id="clear-notifications" style="margin: 0px; width: 100%; padding: 5px 12px; color: #ffffff; background: none; border: none;">Temizle</button>
                                    </li>
                                }
                                else
                                {
                                    <li style="color:white; text-align:center;">Bildirim Kutusu Boş</li>
                                }
                            </ul>
                        </div>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div style="margin-left:0px;" class="search">
                            <a href="#" id="toggleFriendAdd">
                                <i style="font-size:1.8rem !important;" class="bi bi-person-add"></i>
                            </a>
                        </div>
                    }
                    <div style="margin-right:-10px;" class="search">
                        <a href="#" id="toggleAnime">
                            <i class="bi bi-search"></i>
                        </a>
                    </div>

                    <div class="anime">
                        <div style="position:relative;" id="animeContent">
                            <button id="animeclose" class="btn-close"></button>
                            <div class="searchhhh">
                                <i style="color:white;" class="fa-solid fa-magnifying-glass fa-xl"></i>
                                <input type="text" autocomplete="off" name="searchTags1111" id="searchTags1111" placeholder="Anime Ara..." />
                            </div>
                            <ul id="menuFull1111" style="display: none; overflow-y: auto;">
                                @foreach (var anime in Model.Anime.Where(x => x.STATUS == true))
                                {
                                    <li style="margin:10px 0px;width:100%; display:flex; justify-content:space-between; align-items:center;">
                                        <div style="width:100%;">
                                            <a style="display:flex;position:relative;" href="@Url.RouteUrl("Anime Detay", new { animeID = anime.ID, animeName = anime.ANIMENAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",",""), seasonNumber = anime.TBLSEASON?.FirstOrDefault(x => x.ANIMEID == anime.ID)?.SEASONNUMBER ?? 0})">
                                                <div style="position:absolute;" class="skeleton3"></div>
                                                <img data-src="/IMG/@anime.BANNER" class="lazy" style="width:25%; height:120px; object-fit:cover; margin-right:7px; border-radius:5px;" />
                                                <div style="overflow-wrap: break-word; overflow: auto; white-space: normal; width:75%; line-height:1;">
                                                    <strong style="font-size: 0.9rem; color:orange;">@anime.ANIMENAME</strong><br />
                                                    <span style="font-size: 0.8rem; color: #cccccc;">@anime.DETAIL.Substring(0, 130)</span>
                                                </div>
                                            </a>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="friendadd">
                        <div style="position:relative;" id="followersContent">
                            <button id="friendaddclose" class="btn-close"></button>
                            <div class="searchhh">
                                <i style="color:white;" class="fa-solid fa-magnifying-glass fa-xl"></i>
                                <input type="text" autocomplete="off" name="searchTags11" id="searchTags11" placeholder="Arkadaş Ara..." />
                            </div>
                            <ul id="menuFull11" style="display: none; overflow-y: auto;">
                                @foreach (var user in Model.Users.Where(x => x.STATUS == true))
                                {
                                    <li style="margin:10px 0px;width:100%; display:flex; justify-content:space-between; align-items:center;">
                                        <div>
                                            @{
                                                AnitsukiTVEntities y = new AnitsukiTVEntities();
                                                var Followers = y.TBLFOLLOWERS.Where(f => f.FOLLOWEDID == user.ID).Select(f => f.TBLUSER).ToList();
                                                ViewBag.FollowersCountt = Followers.Count(x => x.STATUS == true);
                                            }
                                            <a style="display:flex;position:relative;" href="@Url.RouteUrl("Profil", new { userName = user.USERNAME.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".","").Replace(",","") })">
                                                @if (user.PICTURE != null)
                                                {
                                                    <div style="position:absolute;" class="skeleton1"></div>
                                                    <img data-src="/USERIMG/@user.PICTURE" class="lazy" style="width:50px; height:50px; object-fit:cover; margin-right:7px; border-radius:50%;" />
                                                    <div>
                                                        <strong style="font-size: 0.9rem;">@user.USERNAME</strong><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">Takipçi:@ViewBag.FollowersCountt</span>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div style="position:absolute;" class="skeleton1"></div>
                                                    <img data-src="/USERIMG/stockuser.png" class="lazy" style="width: 50px; height: 50px; object-fit: cover; margin-right: 7px; border-radius: 50%;" />
                                                    <div>
                                                        <strong style="font-size: 0.9rem;">@user.USERNAME</strong><br />
                                                        <span style="font-size: 0.8rem; color: #cccccc;">Takipçi:@ViewBag.FollowersCountt</span>
                                                    </div>
                                                }
                                            </a>
                                        </div>
                                        <div style="color:white;">
                                            <button onclick="followUser  (@user.ID, this)" style="background-color: transparent; border: none; color: #FF7F00;">
                                                @if (ViewBag.FollowedUserIds.Contains(user.ID))
                                                {
                                                    <i style="font-size:2.5rem;" class="bi bi-person-fill-dash"></i> <!-- Takipten çıkma simgesi -->
                                                }
                                                else
                                                {
                                                    <i style="font-size: 2.5rem;" class="bi bi-person-fill-add"></i> <!-- Takip etme simgesi -->
                                                }
                                            </button>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="user">
                        <div style="height:60px; display:flex; align-items:center; margin-left:10px;" class="dropdown">
                            @{ AnitsukiTVEntities db = new AnitsukiTVEntities(); }
                            @if (User.Identity.IsAuthenticated)
                            {
                                var currentUser = db.TBLUSER.FirstOrDefault(u => u.USERNAME == User.Identity.Name);
                                string userNameUrl = User.Identity.Name.ToLower().Replace("ı", "i").Replace("ç", "c").Replace("ö", "o").Replace("ü", "u").Replace("ğ", "g").Replace("ş", "s").Replace(" ", "-").Replace("?", "").Replace("!", "").Replace(">", "").Replace("<", "").Replace("&", "").Replace("%", "").Replace("$", "").Replace("#", "").Replace("@", "").Replace(":", "").Replace(";", "").Replace("/", "").Replace("\\", "").Replace(".", "").Replace(",", "");

                                <button style="background-color:transparent; border:none; outline:none; color:orange;" class="dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    @if (currentUser != null && currentUser.PICTURE != null)
                                    {
                                        <img width="40" height="40" style="border-radius:50%; object-fit:cover;" src="~/USERIMG/@currentUser.PICTURE">
                                    }
                                    else
                                    {
                                        <img width="40" height="40" style="border-radius: 50%; object-fit: cover;" src="~/USERIMG/stockuser.png">
                                    }
                                </button>
                                <ul style="background-color:#313131;" class="dropdown-menu dropdown-menu-end">
                                    <li><a style="margin:0px; padding:5px 12px; color:white;" class="dropdown-item" href="@Url.RouteUrl("Profil", new { userName = userNameUrl })"><i style="font-size:1.3rem;" class="bi bi-person"></i> Profil</a></li>
                                    <li><a style="margin:0px; padding: 5px 15px; color: white;" class="dropdown-item" href="/signout"><i style="font-size:1.3rem;" class="bi bi-box-arrow-right"></i> Çıkış Yap</a></li>
                                </ul>
                            }
                            else
                            {
                                <a style="margin-left:-15px !important;" href="@Url.RouteUrl("Giriş")"><i class="bi bi-person"></i></a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="donation">
            <div class="papara">
                <img src="~/WEBIMG/AnitsukiQR.png">
            </div>
            <div class="text">
                <div style="color:#ffffff;" class="title">
                    Sevgili Anitsuki Klanı Üyeleri,
                </div>
                <br>
                <div style="color:#ffffff;" class="des">
                    Sizlere daha kaliteli ve bağımsız bir içerik sunma hedefimizle yola çıktık. Reklamsız bir deneyim sağlamanın, dikkat dağıtıcı unsurlardan uzak kalmanın ve yalnızca değerli içerikler üretiminin önemine inanıyoruz. Bu hedefe ulaşabilmemiz için siz değerli destekçilerimize ihtiyacımız var. Sitemizin sürdürülebilirliğini sağlamak ve içeriklerimizi geliştirmek için bağışlarınız büyük bir önem taşıyor. Küçük ya da büyük, her katkı bizim için kıymetli. Birlikte daha güzel bir platform oluşturabiliriz!
                    <br>
                    <br>
                    NOT: BAĞIŞINIZIN SİTEMİZE GÖZÜKMESİNİ İSTİYORSANIZ AÇIKLAMAYA NİCKNAME YAZABİLİRSİNİZ.
                    <br>
                    <br>
                    Bağış için yan taraftaki PAPARA QR'ını uygulamadan okutarak yapabilirsiniz.
                    <br>
                    <br>
                    Destekleriniz için şimdiden teşekkür ederiz. Birlikte daha güçlü bir topluluk oluşturmak dileğiyle!
                    <br>
                    <br>
                    Sevgi ve saygılarımızla,
                    <br>
                    <br>
                    Anitsuki Ekibi
                </div>
            </div>
        </div>
        <div style="margin-top:50px;" class="user">
            <div style="color:#ffffff;" class="title">
                <i class="bi bi-cash"></i> Bağışçılarımız
            </div>
            <div class="users">
                @foreach (var x in Model.Donate)
                {
                    <div style="background-color:#000000;" class="box1">
                        <div class="username">@x.DONATER</div>
                        <div class="cash">@x.DONATE ₺</div>
                    </div>
                }
            </div>
        </div>
    </div>

    <footer>
        <div class="footerimg">
        </div>
        <div class="detail">
            <div class="page">
                <div class="title">
                    Sayfalar
                </div>
                <ul>
                    <li><a href="@Url.RouteUrl("Hakkımızda")">Hakkımızda</a></li>
                    <li><a href="@Url.RouteUrl("Gizlilik Politikası")">Gizlilik Politikası</a></li>
                </ul>
            </div>
            <div class="social">
                <div class="title">
                    Sosyal Medyalar
                </div>
                <ul>
                    <li><a target="_blank" href="https://www.youtube.com/channel/UC3AfwO_XmAvYEtw6FWZXZcw"><i class="fa-brands fa-youtube fa-l"></i> Youtube</a></li>
                    @*<li><a href="#"><i class="fa-brands fa-x-twitter fa-l"></i> Twitter-X</a></li>*@
                    <li><a target="_blank" href="https://www.instagram.com/anitsukitv/"><i class="fa-brands fa-instagram fa-l"></i> Instagram</a></li>
                    <li><a target="_blank" href="https://discord.gg/emkmqardFF"><i class="bi bi-discord"></i> Discord</a></li>
                </ul>
            </div>
            <div class="contact">
                <div class="title">
                    İletişim
                </div>
                <ul>
                    <li>anitsuki.destek@gmail.com</li>
                </ul>
            </div>
        </div>
        <div class="copyright ">
            <img src="~/WEBIMG/aylogo.png" alt="anime izle, türkçe altyazı anime izle, anitsuki">
            <div class="text">
                Copyright © Anitsuki @DateTime.Now.Year. Tüm hakları saklıdır.
            </div>
        </div>
    </footer>
</body>
</html>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="~/Scripts/toastr.min.js"></script>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<script>
    document.querySelectorAll('nav a').forEach(link => {
        link.classList.remove('active');

        if (link.href === window.location.href) {
            link.classList.add('active');
        }
    });
    window.addEventListener("load", () => {
        const loader = document.querySelector(".loader");

        loader.classList.add("loader-hidden");
    })
    document.addEventListener('keydown', function (event) {
        if (event.code === 'Space' && event.target.tagName !== 'TEXTAREA' && event.target.tagName !== 'INPUT') {
            event.preventDefault();
            event.stopPropagation();
        }
    });
</script>
<script>
    const togglePositionalHeaderStyles = () => {
        if (window.scrollY > 0 && !header.classList.contains("header-change")) {
            header.classList.add("header-change");
        };
        if (window.scrollY === 0 && header.classList.contains("header-change")) {
            header.classList.remove("header-change");
        };
    };

    let timeoutID = null;
    const header = document.querySelector("header");
    togglePositionalHeaderStyles();
    window.addEventListener("scroll", () => {
        togglePositionalHeaderStyles();
        if (timeoutID) clearTimeout(timeoutID);
        timeoutID = setTimeout(() => {
            togglePositionalHeaderStyles();
        }, 50);
    });
</script>
@if (ViewBag.IsFeatureActive)
{
    <script>
        // script.js
        const snowContainer = document.getElementById('snow-container');

        function createSnowflake() {
            const snowflake = document.createElement('div');
            const size = Math.random() * 5 + 2; // Kar tanesi boyutu
            const leftPosition = Math.random() * window.innerWidth; // Rastgele soldan konum
            const animationDuration = Math.random() * 3 + 2; // Rastgele animasyon süresi

            snowflake.classList.add('snowflake');
            snowflake.style.width = `${size}px`;
            snowflake.style.height = `${size}px`;
            snowflake.style.left = `${leftPosition}px`;
            snowflake.style.animationDuration = `${animationDuration}s`;

            snowContainer.appendChild(snowflake);

            // Kar tanesinin düşüşü tamamlandığında sil
            setTimeout(() => {
                snowflake.remove();
            }, animationDuration * 1000);
        }

        // Kar tanelerini sürekli oluştur
        setInterval(createSnowflake, 500); // Her 100 ms'de bir kar tanesi oluştur
    </script>
}


<script>
    // jQuery kullanarak metin eşleşmesini kontrol eden özel bir seçici
    jQuery.expr[':'].usernameContains = function (a, i, m) {
        var username = $(a).find('strong:first-of-type').text().toUpperCase();
        return username.indexOf(m[3].toUpperCase()) >= 0;
    };

    $(document).ready(function () {
        $("#searchTags11").on("input", function () { // 'input' olayını kullanarak gerçek zamanlı filtreleme
            var value = $(this).val(); // Mevcut giriş değerini al

            if (value.length < 2) {
                $("#menuFull11").hide(); // Eğer giriş 2 karakterden azsa kullanıcıları gizle
            } else {
                $("#menuFull11").show(); // Giriş değeri varsa kullanıcı listesini göster
                $("#menuFull11 li").hide(); // İlk olarak tüm kullanıcıları gizle

                // Giriş değerini içeren kullanıcı adlarını bul ve hepsini göster
                var matchingItems = $("#menuFull11 li:usernameContains(" + value + ")");
                matchingItems.show();
            }
        });

        // Sayfa yüklendiğinde kullanıcı listesini gizle
        $("#menuFull11").hide(); // Bu satır, sayfa yüklendiğinde kullanıcı listesinin gizlenmesini sağlar.
    });
</script>

<script>
    // jQuery kullanarak metin eşleşmesini kontrol eden özel bir seçici
    jQuery.expr[':'].usernameContains = function (a, i, m) {
        var username = $(a).find('strong:first-of-type').text().toUpperCase();
        return username.indexOf(m[3].toUpperCase()) >= 0;
    };

    $(document).ready(function () {
        $("#searchTags1111").on("input", function () { // 'input' olayını kullanarak gerçek zamanlı filtreleme
            var value = $(this).val(); // Mevcut giriş değerini al

            if (value.length < 2) {
                $("#menuFull1111").hide(); // Eğer giriş boşsa kullanıcıları gizle
            } else {
                $("#menuFull1111").show(); // Giriş değeri varsa kullanıcı listesini göster
                $("#menuFull1111 li").hide(); // İlk olarak tüm kullanıcıları gizle

                // Giriş değerini içeren kullanıcı adlarını bul ve hepsini göster
                var matchingItems = $("#menuFull1111 li:usernameContains(" + value + ")");
                matchingItems.show();
            }
        });

        // Sayfa yüklendiğinde kullanıcı listesini gizle
        $("#menuFull1111").hide(); // Bu satır, sayfa yüklendiğinde kullanıcı listesinin gizlenmesini sağlar.
    });
</script>

<script>
    function followUser(followedUserId, button) {
        $.ajax({
            type: "POST",
            url: "/User/FollowUser ",
            data: { followedUserId: followedUserId },
            success: function (response) {
                if (response.success) {
                    if (response.isFollowing) {
                        // Takip etme durumu
                        $(button).html('<i style="font-size:2.5rem; margin-right:5px;" class="bi bi-person-fill-dash"></i>'); // Takipten çıkma simgesi
                        toastr.success('Artık bu kullanıcıyı takip ediyorsunuz.'); // Başarı bildirimi
                    } else {
                        // Takipten çıkma durumu
                        $(button).html('<i style="font-size:2.5rem; margin-right:5px;" class="bi bi-person-fill-add"></i>'); // Takip etme simgesi
                        toastr.error('Artık bu kullanıcıyı takipten çıkıyorsunuz.'); // Hata bildirimi
                    }
                } else {
                    toastr.error(response.message || 'Kullanıcıyı takip etmeye/çıkarma işleminde bir hata oluştu.'); // Hata bildirimi
                }
            },
            error: function () {
                toastr.error('İsteğinizi işleme alırken bir hata oluştu.'); // Genel hata bildirimi
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        // Eğer yeni bildirim varsa ikon dolu olacak
        var hasNewNotification = @Model.Notifications.Any(n => n.ISCLEARED == false).ToString().ToLower();
        if (hasNewNotification) {
            $('#notification-icon').removeClass('bi-bell').addClass('bi-bell-fill');
        }

        $('#notification-icon').click(function () {
            // İkon tıklandığında dolu ikon boş ikona dönüşecek
            $(this).removeClass('bi-bell-fill').addClass('bi-bell');
        });

        $('#clear-notifications').click(function () {
            $.ajax({
                type: "POST",
                url: "/User/ClearNotifications",
                success: function (data) {
                    if (data.success) {
                        $('#nabermudurr').empty();
                        $('#nabermudurr').append('<li style="color:white; text-align:center;">Bildirim Kutusu Boş</li>');
                        $('#notification-icon').removeClass('bi-bell-fill').addClass('bi-bell'); // İkonu boş yap
                        toastr.success(data.message, "Bildirimler Temizlendi");
                    } else {
                        toastr.error(data.message, "Hata");
                    }
                }
            });
        });
    });
</script>
@if (User.Identity.IsAuthenticated)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function isMobile() {
                return /Mobi|Android|iPhone/i.test(navigator.userAgent);
            }

            // FriendAdd için fonksiyonlar
            const toggleButton = document.getElementById('toggleFriendAdd');
            const friendAdd = document.querySelector('.friendadd');
            const toggleButton2 = document.getElementById('friendaddclose');

            // Anime için fonksiyonlar
            const toggleButtonn = document.getElementById('toggleAnime');
            const friendAddd = document.querySelector('.anime');
            const toggleButton22 = document.getElementById('animeclose');

            // Sayfa yüklendiğinde, eğer mobil cihazsa friendAdd ve anime'yi tam ekran yap
            if (isMobile()) {
                if (friendAdd) friendAdd.classList.add('full-screen');
                if (toggleButton2) toggleButton2.classList.add('active');
                if (friendAddd) friendAddd.classList.add('full-screen');
                if (toggleButton22) toggleButton22.classList.add('active');
            }

            // FriendAdd Toggle
            if (toggleButton) {
                toggleButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAdd) friendAdd.classList.toggle('active');
                });
            }

            if (toggleButton2) {
                toggleButton2.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAdd) friendAdd.classList.toggle('active');
                });
            }

            // Anime Toggle
            if (toggleButtonn) {
                toggleButtonn.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAddd) friendAddd.classList.toggle('active');
                });
            }

            if (toggleButton22) {
                toggleButton22.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (friendAddd) friendAddd.classList.remove('active');
                });
            }

            // Sayfanın herhangi bir yerine tıklandığında friendAdd ve anime'yi kapat
            document.addEventListener('click', function (event) {
                if (friendAdd && !friendAdd.contains(event.target) && !toggleButton.contains(event.target) && friendAdd.classList.contains('active')) {
                    friendAdd.classList.remove('active');
                }
                if (friendAddd && !friendAddd.contains(event.target) && !toggleButtonn.contains(event.target) && friendAddd.classList.contains('active')) {
                    friendAddd.classList.remove('active');
                }
            });
        });
    </script>
}
else
{
    <script>
        function isMobile() {
            return /Mobi|Android|iPhone/i.test(navigator.userAgent);
        }

        const toggleButtonn = document.getElementById('toggleAnime');
        const friendAddd = document.querySelector('.anime');
        const toggleButton22 = document.getElementById('animeclose');

        // Sayfa yüklendiğinde, eğer mobil cihazsa friendAdd'i tam ekran yap
        window.onload = function () {
            if (isMobile()) {
                friendAddd.classList.add('full-screen'); // Tam ekran sınıfını ekle
                toggleButton22.classList.add('active'); // Kapat butonunu aktif yap
            }
        };

        toggleButtonn.addEventListener('click', function (event) {
            event.preventDefault(); // Linkin varsayılan davranışını engelle
            friendAddd.classList.toggle('active'); // active sınıfını ekle veya kaldır
        });

        toggleButton22.addEventListener('click', function (event) {
            event.preventDefault(); // Linkin varsayılan davranışını engelle
            friendAddd.classList.remove('active'); // active sınıfını kaldır
        });

        // Sayfanın herhangi bir yerine tıklandığında friendAdd'ı kapat
        document.addEventListener('click', function (event) {
            if (!friendAddd.contains(event.target) && !toggleButtonn.contains(event.target)) {
                friendAddd.classList.remove('active'); // active sınıfını kaldır
            }
        });
    </script>
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const lazyImages = document.querySelectorAll("img[data-src]");

        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    const skeleton = img.previousElementSibling; // Skeleton loader

                    // Resim yüklenirken skeleton göster
                    skeleton.style.display = "block";

                    // Resim kaynağını ayarla
                    img.src = img.dataset.src;

                    // Resim yüklendiğinde
                    img.onload = () => {
                        skeleton.style.display = "none"; // Skeleton'ı gizle
                        img.style.display = "block"; // Resmi göster
                        img.classList.remove("lazy"); // Lazy sınıfını kaldır
                    };

                    observer.unobserve(img); // Resmi gözlemden kaldır
                }
            });
        });

        lazyImages.forEach(image => {
            imageObserver.observe(image); // Her resmi gözlemle
        });
    });
</script>